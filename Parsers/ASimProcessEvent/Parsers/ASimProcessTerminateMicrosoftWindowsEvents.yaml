Parser:
  Title: Process Terminate Event ASIM parser for WEF Security Events
  Version: '0.1.1'
  LastUpdated: Feb 23, 2022
Product:
  Name: Security Events
Normalization:
  Schema: ProcessEvent
  Version: '0.1.0'
References:
- Title: ASIM Process Schema
  Link: https://aka.ms/ASimProcessEventDoc 
- Title: ASIM
  Link: https://aka.ms/AboutASIM
Description: |
  This ASIM parser supports normalizing Windows process terminate events (event 4689) collected using the WEF connector (WindowsEvent table) to the ASIM Process Event normalized schema. 
ParserName: ASimProcessTerminateMicrosoftWindowsEvents
EquivalentBuiltInParser: _ASim_ProcessEvent_TerminateMicrosoftWindowsEvents
ParserParams:
  - Name: disabled
    Type: bool
    Default: false
ParserQuery: |    
        let ProcessEvents=(){
        WindowsEvent 
        | where not(disabled)
        | where EventID == 4689
            // -- Filter
            // -- Map
              | extend
            // Event
          EventCount = int(1),
          EventVendor = "Microsoft",
          EventProduct = "Security Events",
          EventSchemaVersion = "0.1.0",
          EventSchema = 'ProcessEvent',
          EventStartTime = todatetime(TimeGenerated),
          EventEndTime = todatetime(TimeGenerated),
          EventType = "ProcessTerminated",
          EventResult = 'Success',
          EventOriginalType = tostring(EventID),
          EventOriginalUid = EventOriginId,
          EventResultDetails = tostring(EventData.Status),
          EventOriginalResultDetails = tostring(EventData.Status), 
        // Device
          DvcId = tostring(EventData.SourceComputerId),
          DvcHostname = Computer,
          DvcOs = "Windows",
        // Users
          ActorUserId = tostring(EventData.SubjectUserSid),
          ActorUserIdType = "SID",
          ActorUsername = tostring(iff (EventData.SubjectDomainName in ('', '-'), EventData.SubjectUserName, strcat(EventData.SubjectDomainName, @"\" , EventData.SubjectUserName))),
          ActorUsernameType = iff(EventData.SubjectDomainName in ('', '-'),'Simple', 'Windows'),
          ActorSessionId = tostring(toint(EventData.SubjectLogonId)),
        // Processes 
          TargetProcessId = tostring(toint(tostring(EventData.ProcessId))),
          TargetProcessName = tostring(EventData.ProcessName),
          TargetProcessCommandLine = tostring(EventData.CommandLine),
          TargetProcessTokenElevation = tostring(EventData.TokenElevationType)
        // Aliases
            | extend 
          User = ActorUsername,
          Dvc = DvcHostname,
          Process = TargetProcessName
           | project-away EventData
          }; ProcessEvents
