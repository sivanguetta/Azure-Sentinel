Parser:
  Title: Process Create Event ASIM parser for Sysmon
  Version: '0.4.0'
  LastUpdated: Feb 23, 2022
Product:
  Name: Sysmon
Normalization:
  Schema: ProcessEvent
  Version: '0.1.0'
References:
- Title: ASIM Process Schema
  Link: https://aka.ms/ASimProcessEventDoc
- Title: ASIM
  Link: https://aka.ms/AboutASIM
Description: |
  This ASIM parser supports filtering and normalizing Sysmon process create events (event 1) collected using the Event or WEF (WindowsEvent table) connectors to the ASIM Process Event normalized schema. 
ParserName: vimProcessCreateMicrosoftSysmon
EquivalentBuiltInParser: _Im_ProcessCreate_MicrosoftSysmon
ParserParams:
  - Name: starttime
    Type: datetime
    Default: datetime(null)
  - Name: endtime
    Type: datetime
    Default: datetime(null)
  - Name: commandline_has_any
    Type: dynamic
    Default: dynamic([])
  - Name: commandline_has_all
    Type: dynamic
    Default: dynamic([])
  - Name: commandline_has_any_ip_prefix
    Type: dynamic
    Default: dynamic([])
  - Name: actingprocess_has_any
    Type: dynamic
    Default: dynamic([])
  - Name: targetprocess_has_any
    Type: dynamic
    Default: dynamic([])
  - Name: parentprocess_has_any
    Type: dynamic
    Default: dynamic([])
  - Name: targetusername
    Type: string
    Default: '*'
  - Name: dvcipaddr_has_any_prefix
    Type: dynamic
    Default: dynamic([])
  - Name: dvcname_has_any
    Type: dynamic
    Default: dynamic([])
  - Name: eventtype
    Type: string
    Default: '*'
  - Name: disabled
    Type: bool
    Default: false

ParserQuery: | 
    // =======================================================================================================================================
    //    Sysmon from Event table
    // =======================================================================================================================================
    let Sysmon11_Event=(){
    Event
    | where Source == "Microsoft-Windows-Sysmon" and EventID==1
    // --------------------------------------------------------------------------------------
    | where
    (isnull(starttime)   or TimeGenerated >= starttime )
    and (isnull(endtime) or TimeGenerated <= endtime )
    and (disabled)
    and (eventtype=='*' or eventtype=='ProcessCreated')
    and (array_length(commandline_has_all)==0 or EventData has_all (commandline_has_all)) 
    and (array_length(commandline_has_any)==0 or EventData has_any (commandline_has_any)) 
    and (array_length(commandline_has_any_ip_prefix)==0 or has_any_ipv4_prefix(EventData, commandline_has_any_ip_prefix) ) 
    and (array_length(actingprocess_has_any)==0 or EventData has_any (actingprocess_has_any)) 
    and (array_length(targetprocess_has_any)==0 or EventData has_any (targetprocess_has_any)) 
    and (array_length(parentprocess_has_any)==0)  /// ????
    and (targetusername=='*' or EventData has targetusername)  
    and (array_length(dvcipaddr_has_any_prefix)==0)
    and (array_length(dvcname_has_any)==0 or Computer has_any (dvcname_has_any))   
    // --------------------------------------------------------------------------------------
    | parse EventData with * '<Data Name="RuleName">'RuleName // parsing the XML using the original fields name - for readibliy 
                        '</Data><Data Name="UtcTime">'UtcTime
                        '</Data><Data Name="ProcessGuid">{'ProcessGuid
                        '}</Data><Data Name="ProcessId">'ProcessId:string
                        '</Data><Data Name="Image">'Image
                        '</Data><Data Name="FileVersion">'FileVersion
                        '</Data><Data Name="Description">'Description
                        '</Data><Data Name="Product">'Product
                        '</Data><Data Name="Company">'Company'</Data>' *
    // --------------------------------------------------------------------------------------
    | where (array_length(targetprocess_has_any)==0 or Image has_any (targetprocess_has_any)) 
    // --------------------------------------------------------------------------------------
    | extend  OriginalFileName = extract (@'"OriginalFileName">([^<]+)<',1,EventData) // this field exists in sysmon version 10.42 and above - using extact to avoid parsing failure
    | parse EventData with *
                        '<Data Name="CommandLine">'CommandLine'</Data>'
                        '<Data Name="CurrentDirectory">'CurrentDirectory
                        '</Data><Data Name="User">'User
                        '</Data><Data Name="LogonGuid">{'LogonGuid
                        '}</Data><Data Name="LogonId">'LogonId
                        '</Data><Data Name="TerminalSessionId">'TerminalSessionId
                        '</Data><Data Name="IntegrityLevel">'IntegrityLevel
                        '</Data><Data Name="Hashes">'Hashes
                        '</Data><Data Name="ParentProcessGuid">{'ParentProcessGuid
                        '}</Data><Data Name="ParentProcessId">'ParentProcessId:string
                        '</Data><Data Name="ParentImage">'ParentImage
                          '</Data><Data Name="ParentCommandLine">'ParentCommandLine '</Data>'*
    // --------------------------------------------------------------------------------------
    | where (array_length(commandline_has_any)==0 or CommandLine has_any (commandline_has_any)) 
          and (array_length(commandline_has_all)==0 or CommandLine has_all (commandline_has_all)) 
          and (array_length(commandline_has_any_ip_prefix)==0 or has_any_ipv4_prefix(CommandLine, commandline_has_any_ip_prefix) ) 
          and (array_length(actingprocess_has_any)==0 or ParentImage has_any (actingprocess_has_any)) 
          and (targetusername=='*' or User has targetusername) 
    // --------------------------------------------------------------------------------------
    | parse EventData with * '<Data Name="ParentUser">' ActorUsername '</Data>' * // this field exists in new versions of Sysmon
    | extend    TargetProcessSHA1=extract(@'SHA1=(\w+)',1, tostring(Hashes)),
                TargetProcessSHA256=extract(@'SHA256=(\w+)',1, tostring(Hashes)),
                TargetProcessIMPHASH=extract(@'IMPHASH=(\w+)',1,tostring(Hashes)), // add to the empty schema + Excel file
                TargetProcessMD5=extract(@'MD5=(\w+)',1, tostring(Hashes))
        // End of XML parse
    | project-away Hashes
    | extend 
                EventType = "ProcessCreated",
                EventStartTime = todatetime(TimeGenerated),
                EventEndTime = todatetime(TimeGenerated),
                EventCount = int(1),
                EventVendor = "Microsoft",
                EventSchemaVersion = "0.1.0",
                EventSchema = 'ProcessEvent',
                EventProduct = "Sysmon",
                EventResult = 'Success',
                EventOriginalType = tostring(EventID),
                DvcOs = "Windows",
                TargetUserSessionId = tostring(LogonId),           
                TargetUsername = User,
                TargetProcessCommandLine = CommandLine,
                TargetProcessCurrentDirectory = CurrentDirectory
    | project-rename 
                EventMessage = RenderedDescription,
                DvcHostname = Computer,
                TargetUserSessionGuid = LogonGuid, 
                TargetProcessId = ProcessId,
                TargetProcessGuid = ProcessGuid,
                TargetProcessName = Image,
                TargetProcessIntegrityLevel = IntegrityLevel,    
                TargetProcessCompany = Company,
                TargetProcessFileDescription = Description,
                TargetProcessFileVersion = FileVersion,
                TargetProcessFileProduct = Product,   
                ActingProcessId = ParentProcessId,
                ActingProcessGuid = ParentProcessGuid,                          
                ActingProcessCommandLine = ParentCommandLine,
                ActingProcessName = ParentImage
    | extend 
                TargetUsernameType = iff(isnotempty(TargetUsername),'Windows', ''),
                ActorUsernameType = iff(isnotempty(ActorUsername),'Windows', ''),
                // aliases
                Process = TargetProcessName,
                Dvc = DvcHostname,
                Hash = coalesce(TargetProcessSHA256, TargetProcessSHA1, TargetProcessMD5) // which appears first - will be aliases to "Hash"
    | project-away EventData, RuleName, ParameterXml
    };
    // =======================================================================================================================================
    //    Sysmon from WindowsEvent table
    // =======================================================================================================================================
    let ParsedProcessEvent_WindowsEvent=(){
    WindowsEvent
    | where Provider == "Microsoft-Windows-Sysmon" and EventID==1
    // --------------------------------------------------------------------------------------
    | where
    (isnull(starttime)   or TimeGenerated >= starttime )
    and (isnull(endtime) or TimeGenerated <= endtime )
    and not(disabled)
    and (eventtype=='*' or eventtype=='ProcessCreated')
    and (array_length(commandline_has_all)==0 or EventData.CommandLine has_all (commandline_has_all)) 
    and (array_length(commandline_has_any)==0 or EventData.CommandLine has_any (commandline_has_any)) 
    and (array_length(commandline_has_any_ip_prefix)==0 or has_any_ipv4_prefix(EventData.CommandLine, commandline_has_any_ip_prefix) ) 
    and (array_length(actingprocess_has_any)==0 or EventData.ParentImage has_any (actingprocess_has_any)) 
    and (array_length(targetprocess_has_any)==0 or EventData.Image has_any (targetprocess_has_any)) 
    and (array_length(parentprocess_has_any)==0)  /// ????
    and (targetusername=='*' or EventData.User has targetusername)  
    and (array_length(dvcipaddr_has_any_prefix)==0)
    and (array_length(dvcname_has_any)==0 or Computer has_any (dvcname_has_any))   
    // --------------------------------------------------------------------------------------
    | extend hash = split(EventData.Hashes,'=')
    | extend hash_algorithm = tostring(hash[0]),
                hash_value = tostring(hash[1])
    | extend TargetProcessMD5 = iff(hash_algorithm == "MD5", hash_value, ""),
            TargetProcessSHA1 =  iff(hash_algorithm == "SHA1", hash_value, ""),
            TargetProcessSHA256 = iff(hash_algorithm == "SHA256", hash_value, ""),
            TargetProcessIMPHASH = iff(hash_algorithm == "IMPHASH", hash_value, "")
    | project-away hash, hash_algorithm
    | extend 
            EventType = "ProcessCreated",
            EventStartTime = todatetime(TimeGenerated),
            EventEndTime = todatetime(TimeGenerated),
            EventCount = int(1),
            EventVendor = "Microsoft",
            EventSchemaVersion = "0.1.0",
            EventProduct = "Sysmon",
            EventResult = 'Success',
            EventOriginalType = tostring(EventID),
            DvcOs = "Windows",
            TargetUserSessionId = tostring(EventData.LogonId),           
            TargetUsernameType = "Windows",
            ActorUsernameType = "Windows",
            TargetUsername = tostring(EventData.User),
            TargetProcessCommandLine = tostring(EventData.CommandLine),
            TargetProcessCurrentDirectory = tostring(EventData.CurrentDirectory),
            EventMessage = tostring(EventData.RenderedDescription),
            TargetUserSessionGuid = tostring(EventData.LogonGuid), 
            TargetProcessId = tostring(EventData.ProcessId),
            TargetProcessGuid = tostring(EventData.ProcessGuid),
            TargetProcessName = tostring(EventData.Image),
            TargetProcessIntegrityLevel = tostring(EventData.IntegrityLevel),
            TargetProcessCompany = tostring(EventData.Company),
            TargetProcessFileDescription = tostring(EventData.Description),
            TargetProcessFileVersion = tostring(EventData.FileVersion),
            TargetProcessFileProduct = tostring(EventData.Product),
            ActingProcessId = tostring(EventData.ParentProcessId),
            ActingProcessGuid = tostring(EventData.ParentProcessGuid),                          
            ActingProcessCommandLine = tostring(EventData.ParentCommandLine),
            ActingProcessName = tostring(EventData.ParentImage),
            ActorUsername = tostring(EventData.ParentUser)
    | extend TargetUsernameType = iff(isnotempty(TargetUsername),'Windows', ''),
              ActorUsernameType = iff(isnotempty(ActorUsername),'Windows', ''),
              // aliases 
            DvcHostname = Computer,
            Hash = hash_value,
            User = TargetUsername
    | project-away EventData
            };
    union isfuzzy=true ParsedProcessEvent_WindowsEvent, Sysmon11_Event
