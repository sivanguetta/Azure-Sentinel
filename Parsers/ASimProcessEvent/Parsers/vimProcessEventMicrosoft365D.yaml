Parser:
  Title: Process Create Event ASIM parser for Microsoft 365 Defender for endpoint
  Version: '0.2.0'
  LastUpdated: Apr 30, 2022
Product:
  Name: Microsoft 365 Defender for endpoint
Normalization:
  Schema: ProcessEvent
  Version: '0.1.0'
References:
- Title: ASIM Process Schema
  Link: https://aka.ms/ASimProcessEventDoc
- Title: ASIM
  Link: https://aka.ms/AboutASIM
Description: |
    This ASIM parser supports normalizing Microsoft 365 Defender for endpoint to the ASIM Process Event normalized schema.
ParserName: vimProcessEventMicrosoft365D
EquivalentBuiltInParser: _Im_ProcessEvent_Microsoft365D
ParserParams:
  - Name: starttime
    Type: datetime
    Default: datetime(null)
  - Name: endtime
    Type: datetime
    Default: datetime(null)
  - Name: commandline_has_any
    Type: dynamic
    Default: dynamic([])
  - Name: commandline_has_all
    Type: dynamic
    Default: dynamic([])
  - Name: commandline_has_any_ip_prefix
    Type: dynamic
    Default: dynamic([])
  - Name: actingprocess_has_any
    Type: dynamic
    Default: dynamic([])
  - Name: targetprocess_has_any
    Type: dynamic
    Default: dynamic([])
  - Name: parentprocess_has_any
    Type: dynamic
    Default: dynamic([])
  - Name: targetusername
    Type: string
    Default: '*'
  - Name: dvcipaddr_has_any_prefix
    Type: dynamic
    Default: dynamic([])
  - Name: dvcname_has_any
    Type: dynamic
    Default: dynamic([])
  - Name: eventtype
    Type: string
    Default: '*'
  - Name: disabled
    Type: bool
    Default: false
ParserQuery: |
  let ProcessEvents_M365D=()
  {
    DeviceProcessEvents
    // --------------------------------------------------------------------------------------
      | where
      (isnull(starttime)   or TimeGenerated >= starttime )
      and (isnull(endtime) or TimeGenerated <= endtime )
      and not(disabled)
      and (array_length(dvcipaddr_has_any_prefix)==0)
      and (array_length(commandline_has_all)==0 or ProcessCommandLine has_all (commandline_has_all)) 
      and (array_length(commandline_has_any)==0 or ProcessCommandLine has_any (commandline_has_any)) 
      and (array_length(commandline_has_any_ip_prefix)==0 or has_any_ipv4_prefix(ProcessCommandLine, commandline_has_any_ip_prefix) ) 
      and (array_length(actingprocess_has_any)==0 or InitiatingProcessFolderPath has_any (actingprocess_has_any)) 
      and (array_length(targetprocess_has_any)==0 or FolderPath has_any (targetprocess_has_any)) 
      and (array_length(parentprocess_has_any)==0 or InitiatingProcessParentFileName has_any (parentprocess_has_any))  
      and (targetusername=='*' or targetusername has AccountName)  
      and (array_length(dvcname_has_any)==0 or DeviceName has_any (dvcname_has_any))   
      and (eventtype=='*' or eventtype=='ProcessCreated')
    // --------------------------------------------------------------------------------------
    | extend
      // Event
      EventOriginalUid = tostring(ReportId),
      EventCount = int(1),
      EventProduct = 'M365 Defender for Endpoint',
      EventVendor = 'Microsoft',
      EventSchemaVersion = '0.1.0',
      EventSchema = 'ProcessEvent',
      EventStartTime = todatetime(TimeGenerated),
      EventEndTime = todatetime(TimeGenerated),
      EventType = 'ProcessCreated',
      EventResult = 'Success',
      // Device
      DvcHostname = DeviceName,
      DvcId = DeviceId,
      Dvc = DeviceName
      // Users
    | extend
      ActorUsername = iff (InitiatingProcessAccountDomain == '', InitiatingProcessAccountName, strcat(InitiatingProcessAccountDomain, '\\', InitiatingProcessAccountName)),
      TargetUsername = iff (AccountDomain == '', AccountName, strcat(AccountDomain, '\\', AccountName)),
      TargetUsernameType = iff(AccountDomain == '','Simple', 'Windows'),
      ActorUsernameType = iff(InitiatingProcessAccountDomain == '','Simple', 'Windows'),
      ActorUserIdType = 'SID',
      TargetUserIdType = 'SID',
      ActorSessionId = tostring(InitiatingProcessLogonId),
      TargetUserSessionId = tostring(LogonId)
    | project-rename
      ActorUserId = InitiatingProcessAccountSid,
      ActorUserAadId = InitiatingProcessAccountObjectId,
      ActorUserUpn = InitiatingProcessAccountUpn,
      TargetUserId = AccountSid,
      TargetUserAadId = AccountObjectId,
      TargetUserUpn = AccountUpn
      // Processes
    | extend
      TargetProcessId = tostring(ProcessId),
      ActingProcessId = tostring(InitiatingProcessId),
      ParentProcessId = tostring(InitiatingProcessParentId)
    | project-rename
      ParentProcessName = InitiatingProcessParentFileName, 
      ParentProcessCreationTime = InitiatingProcessParentCreationTime,
      TargetProcessName = FolderPath,
      TargetProcessCommandLine = ProcessCommandLine,
      TargetProcessMD5 = MD5,
      TargetProcessSHA1 = SHA1,
      TargetProcessSHA256 = SHA256,
      TargetProcessIntegrityLevel = ProcessIntegrityLevel,
      TargetProcessTokenElevation = ProcessTokenElevation,
      TargetProcessCreationTime = ProcessCreationTime,
      // TargetProcessFileSize = FileSize,
      // TargetProcessCompany = ProcessVersionInfoCompanyName,
      // TargetProcessFileProduct = ProcessVersionInfoProductName,
      // TargetProcessFileVersion = ProcessVersionInfoProductVersion,
      // TargetProcessFileInternalName = ProcessVersionInfoInternalFileName,
      // TargetProcessFileOriginallName = ProcessVersionInfoOriginalFileName,
      // TargetProcessFileDescription = ProcessVersionInfoFileDescription
      ActingProcessName = InitiatingProcessFolderPath, 
      ActingProcessCommandLine = InitiatingProcessCommandLine, 
      ActingProcessMD5 = InitiatingProcessMD5, 
      ActingProcessSHA1 = InitiatingProcessSHA1, 
      ActingProcessSHA256 = InitiatingProcessSHA256, 
      ActingProcessIntegrityLevel = InitiatingProcessIntegrityLevel,
      ActingProcessTokenElevation = InitiatingProcessTokenElevation,
      ActingProcessCreationTime = InitiatingProcessCreationTime
      // ActingProcessFileSize = InitiatingProcessFileSize,
      // ActingProcessCompany = InitiatingProcessVersionInfoCompanyName,
      // ActingProcessFileProduct = InitiatingProcessVersionInfoProductName,
      // ActingProcessFileVersion = InitiatingProcessVersionInfoProductVersion,
      // ActingProcessFileInternalName = InitiatingProcessVersionInfoInternalFileName,
      // ActingProcessFileOriginallName = InitiatingProcessVersionInfoOriginalFileName,
      // ActingProcessFileDescription = InitiatingProcessVersionInfoFileDescription
      // -- aliases
    | extend 
      User = coalesce(TargetUsername, ActorUsername),
      CommandLine = TargetProcessCommandLine,
      Process = TargetProcessName
    };
    ProcessEvents_M365D