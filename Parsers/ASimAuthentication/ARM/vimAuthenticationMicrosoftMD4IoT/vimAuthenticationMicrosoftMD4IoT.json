{
  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "Workspace": {
      "type": "string",
      "metadata": {
        "description": "The Microsoft Sentinel workspace into which the function will be deployed. Has to be in the selected Resource Group."
      }
    },
    "WorkspaceRegion": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The region of the selected workspace. The default value will use the Region selection above."
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2017-03-15-preview",
      "name": "[parameters('Workspace')]",
      "location": "[parameters('WorkspaceRegion')]",
      "resources": [
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "vimAuthenticationMD4IoT",
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', parameters('Workspace'))]"
          ],
          "properties": {
            "etag": "*",
            "displayName": "Authentication ASIM filtering parser for Microsoft Defender for IoT endpoint logs",
            "category": "ASIM",
            "FunctionAlias": "vimAuthenticationMD4IoT",
            "query": "let Authentication_MD4IoT=(starttime:datetime=datetime(null), endtime:datetime=datetime(null), targetusername_has:string=\"*\", disabled:bool=false)\n  {\n    SecurityIoTRawEvent  | where not(disabled)\n    | where RawEventName == \"Login\"\n  // ************************************************************************* \n  //       <Prefilterring>\n  // *************************************************************************\n  | where \n    (isnull(starttime)   or TimeGenerated >= starttime) \n    and (isnull(endtime)     or TimeGenerated <= endtime)\n    and (targetusername_has=='*' or EventDetails has targetusername_has)\n  // ************************************************************************* \n  //       </Prefilterring>\n  // ************************************************************************* \n    | extend\n      EventDetails = todynamic(EventDetails)\n      //\n    | extend\n      EventOriginalUid = tostring(EventDetails.OriginalEventId), \n      EventProduct = 'Microsoft Defender for IoT',\n      EventCount=int(1),\n      EventVendor = 'Microsoft', \n      EventSchemaVersion = '0.1.0', \n      EventStartTime = todatetime(EventDetails.TimestampUTC), \n      EventEndTime = todatetime(TimeGenerated), \n      EventType = iff (EventDetails.Operation == 'Logout', 'Logoff', 'Logon'),  \n      EventResult = iff (EventDetails.Operation == 'LoginFailed', 'Failure', 'Success')  \n      //\n    | extend\n      ActingProcessId = tostring(EventDetails.ProcessId),  \n      ActingProcessName = tostring(EventDetails.Executable),  // -- Linux input device or service used to authenticate, for example pts/1, tty1, pts/0, ssh:notty \n      DvcOs = iif (EventDetails.MessageSource == \"Linux\", \"Linux\", \"Windows\"),  // -- Intermediate fix\n      TargetUsernameType = \"Simple\",\n      TargetUsername = tostring(EventDetails.UserName)\n      // ************************************************************************* \n      //       <Postfilterring>\n      // *************************************************************************\n      | where \n          (targetusername_has=='*' or TargetUsername has targetusername_has)\n      // ************************************************************************* \n      //       <Postfilterring>\n      // *************************************************************************\n    | extend  SrcIpAddr = tostring(EventDetails.RemoteAddress) \n    | project-rename\n      DvcHostname = DeviceId, \n      EventProductVersion = AgentVersion,  // -- Not available in Windows\n      _ResourceId = AssociatedResourceId, \n      _SubscriptionId = AzureSubscriptionId \n      //\n      // -- aliases\n    | extend \n      User = TargetUsername, \n      Process = ActingProcessName, \n      Dvc = DvcHostname,\n      SrcDvcIpAddr = SrcIpAddr,\n      IpAddr = SrcIpAddr\n    };\n    Authentication_MD4IoT(starttime, endtime, targetusername_has, disabled)",
            "version": 1,
            "functionParameters": "starttime:datetime=datetime(null),endtime:datetime=datetime(null),targetusername_has:string='*',disabled:bool=False"
          }
        }
      ]
    }
  ]
}