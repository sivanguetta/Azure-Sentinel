{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "author": "Microsoft",
    "comments": "Solution template for Illumio Core"
  },
  "parameters": {
    "location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
      }
    },
    "workspace-location": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "[concat('Region to deploy solution resources -- separate from location selection',parameters('location'))]"
      }
    },
    "workspace": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Workspace name for Log Analytics where Microsoft Sentinel is setup"
      }
    }
  },
  "variables": {
    "solutionId": "azuresentinel.azure-sentinel-solution-illumiocore",
    "_solutionId": "[variables('solutionId')]",
    "workspaceResourceId": "[resourceId('microsoft.OperationalInsights/Workspaces', parameters('workspace'))]",
    "uiConfigId1": "IllumioCore",
    "_uiConfigId1": "[variables('uiConfigId1')]",
    "dataConnectorContentId1": "IllumioCore",
    "_dataConnectorContentId1": "[variables('dataConnectorContentId1')]",
    "dataConnectorId1": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
    "_dataConnectorId1": "[variables('dataConnectorId1')]",
    "dataConnectorTemplateSpecName1": "[concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentId1')))]",
    "dataConnectorVersion1": "1.0.0",
    "parserVersion1": "1.0.0",
    "parserContentId1": "IllumioCoreEvent-Parser",
    "_parserContentId1": "[variables('parserContentId1')]",
    "parserName1": "IllumioCoreEvent",
    "_parserName1": "[concat(parameters('workspace'),'/',variables('parserName1'))]",
    "parserId1": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName1'))]",
    "_parserId1": "[variables('parserId1')]",
    "parserTemplateSpecName1": "[concat(parameters('workspace'),'-pr-',uniquestring(variables('_parserContentId1')))]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('dataConnectorTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "DataConnector"
      },
      "properties": {
        "description": "Illumio Core data connector with template",
        "displayName": "Illumio Core template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('dataConnectorTemplateSpecName1'),'/',variables('dataConnectorVersion1'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "DataConnector"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('dataConnectorTemplateSpecName1'))]"
      ],
      "properties": {
        "description": "Illumio Core data connector with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('dataConnectorVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId1'))]",
              "apiVersion": "2021-03-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
              "location": "[parameters('workspace-location')]",
              "kind": "GenericUI",
              "properties": {
                "connectorUiConfig": {
                  "id": "[variables('_uiConfigId1')]",
                  "title": "Illumio Core",
                  "publisher": "Illumio",
                  "descriptionMarkdown": "The [Illumio Core](https://www.illumio.com/products/core) data connector provides the capability to ingest Illumio Core logs into Microsoft Sentinel.",
                  "additionalRequirementBanner": "This data connector depends on a parser based on a Kusto Function to work as expected [**IllumioCoreEvent**](https://aka.ms/sentinel-IllumioCore-parser) which is deployed with the Microsoft Sentinel Solution.",
                  "graphQueries": [
                    {
                      "metricName": "Total data received",
                      "legend": "IllumioCore",
                      "baseQuery": "IllumioCoreEvent"
                    }
                  ],
                  "sampleQueries": [
                    {
                      "description": "Top 10 Event Types",
                      "query": "IllumioCoreEvent\n | where isnotempty(EventType)\n    | summarize count() by EventType\n | top 10 by count_"
                    }
                  ],
                  "dataTypes": [
                    {
                      "name": "CommonSecurityLog (IllumioCore)",
                      "lastDataReceivedQuery": "IllumioCoreEvent\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    }
                  ],
                  "connectivityCriterias": [
                    {
                      "type": "IsConnectedQuery",
                      "value": [
                        "IllumioCoreEvent\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(30d)"
                      ]
                    }
                  ],
                  "availability": {
                    "status": 1,
                    "isPreview": false
                  },
                  "permissions": {
                    "resourceProvider": [
                      {
                        "provider": "Microsoft.OperationalInsights/workspaces",
                        "permissionsDisplayText": "read and write permissions are required.",
                        "providerDisplayName": "Workspace",
                        "scope": "Workspace",
                        "requiredPermissions": {
                          "write": true,
                          "read": true,
                          "delete": true
                        }
                      },
                      {
                        "provider": "Microsoft.OperationalInsights/workspaces/sharedKeys",
                        "permissionsDisplayText": "read permissions to shared keys for the workspace are required. [See the documentation to learn more about workspace keys](https://docs.microsoft.com/azure/azure-monitor/platform/agent-windows#obtain-workspace-id-and-key).",
                        "providerDisplayName": "Keys",
                        "scope": "Workspace",
                        "requiredPermissions": {
                          "action": true
                        }
                      }
                    ]
                  },
                  "instructionSteps": [
                    {
                      "description": ">**NOTE:** This data connector depends on a parser based on a Kusto Function to work as expected. [Follow these steps](https://aka.ms/sentinel-IllumioCore-parser) to create the Kusto Functions alias, **IllumioCoreEvent**"
                    },
                    {
                      "description": "Install and configure the Linux agent to collect your Common Event Format (CEF) Syslog messages and forward them to Microsoft Sentinel.\n\n> Notice that the data from all regions will be stored in the selected workspace",
                      "innerSteps": [
                        {
                          "title": "1.1 Select or create a Linux machine",
                          "description": "Select or create a Linux machine that Microsoft Sentinel will use as the proxy between your security solution and Microsoft Sentinel this machine can be on your on-prem environment, Azure or other clouds."
                        },
                        {
                          "title": "1.2 Install the CEF collector on the Linux machine",
                          "description": "Install the Microsoft Monitoring Agent on your Linux machine and configure the machine to listen on the necessary port and forward messages to your Microsoft Sentinel workspace. The CEF collector collects CEF messages on port 514 TCP.\n\n> 1. Make sure that you have Python on your machine using the following command: python -version.\n\n> 2. You must have elevated permissions (sudo) on your machine.",
                          "instructions": [
                            {
                              "parameters": {
                                "fillWith": [
                                  "WorkspaceId",
                                  "PrimaryKey"
                                ],
                                "label": "Run the following command to install and apply the CEF collector:",
                                "value": "sudo wget -O cef_installer.py https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/DataConnectors/CEF/cef_installer.py&&sudo python cef_installer.py {0} {1}"
                              },
                              "type": "CopyableLabel"
                            }
                          ]
                        }
                      ],
                      "title": "1. Linux Syslog agent configuration"
                    },
                    {
                      "description": "2.1 Configure Event Format\n\n 1. From the PCE web console menu, choose **Settings > Event Settings** to view your current settings.\n\n 2. Click **Edit** to change the settings.\n\n 3. Set **Event Format** to CEF.\n\n 4. (Optional) Configure **Event Severity** and **Retention Period**.\n\n2.2 Configure event forwarding to an external syslog server\n\n 1. From the PCE web console menu, choose **Settings > Event Settings**.\n\n 2. Click **Add**.\n\n 3. Click **Add Repository**.\n\n 4. Complete the **Add Repository** dialog.\n\n 5. Click **OK** to save the event forwarding configuration.",
                      "title": "2. Configure Ilumio Core to send logs using CEF"
                    },
                    {
                      "description": "Follow the instructions to validate your connectivity:\n\nOpen Log Analytics to check if the logs are received using the CommonSecurityLog schema.\n\n>It may take about 20 minutes until the connection streams data to your workspace.\n\nIf the logs are not received, run the following connectivity validation script:\n\n> 1. Make sure that you have Python on your machine using the following command: python -version\n\n>2. You must have elevated permissions (sudo) on your machine",
                      "instructions": [
                        {
                          "parameters": {
                            "fillWith": [
                              "WorkspaceId"
                            ],
                            "label": "Run the following command to validate your connectivity:",
                            "value": "sudo wget -O cef_troubleshoot.py https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/DataConnectors/CEF/cef_troubleshoot.py&&sudo python cef_troubleshoot.py  {0}"
                          },
                          "type": "CopyableLabel"
                        }
                      ],
                      "title": "3. Validate connection"
                    },
                    {
                      "description": "Make sure to configure the machine's security according to your organization's security policy\n\n\n[Learn more >](https://aka.ms/SecureCEF)",
                      "title": "4. Secure your machine "
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId1'),'/'))))]",
              "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
                "contentId": "[variables('_dataConnectorContentId1')]",
                "kind": "DataConnector",
                "version": "[variables('dataConnectorVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "Illumio Core",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft"
                },
                "support": {
                  "name": "Microsoft",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId1'),'/'))))]",
      "dependsOn": [
        "[variables('_dataConnectorId1')]"
      ],
      "location": "[parameters('workspace-location')]",
      "properties": {
        "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
        "contentId": "[variables('_dataConnectorContentId1')]",
        "kind": "DataConnector",
        "version": "[variables('dataConnectorVersion1')]",
        "source": {
          "kind": "Solution",
          "name": "Illumio Core",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Microsoft"
        },
        "support": {
          "name": "Microsoft",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        }
      }
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId1'))]",
      "apiVersion": "2021-03-01-preview",
      "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
      "location": "[parameters('workspace-location')]",
      "kind": "GenericUI",
      "properties": {
        "connectorUiConfig": {
          "title": "Illumio Core",
          "publisher": "Illumio",
          "descriptionMarkdown": "The [Illumio Core](https://www.illumio.com/products/core) data connector provides the capability to ingest Illumio Core logs into Microsoft Sentinel.",
          "graphQueries": [
            {
              "metricName": "Total data received",
              "legend": "IllumioCore",
              "baseQuery": "IllumioCoreEvent"
            }
          ],
          "dataTypes": [
            {
              "name": "CommonSecurityLog (IllumioCore)",
              "lastDataReceivedQuery": "IllumioCoreEvent\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            }
          ],
          "connectivityCriterias": [
            {
              "type": "IsConnectedQuery",
              "value": [
                "IllumioCoreEvent\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(30d)"
              ]
            }
          ],
          "sampleQueries": [
            {
              "description": "Top 10 Event Types",
              "query": "IllumioCoreEvent\n | where isnotempty(EventType)\n    | summarize count() by EventType\n | top 10 by count_"
            }
          ],
          "availability": {
            "status": 1,
            "isPreview": false
          },
          "permissions": {
            "resourceProvider": [
              {
                "provider": "Microsoft.OperationalInsights/workspaces",
                "permissionsDisplayText": "read and write permissions are required.",
                "providerDisplayName": "Workspace",
                "scope": "Workspace",
                "requiredPermissions": {
                  "write": true,
                  "read": true,
                  "delete": true
                }
              },
              {
                "provider": "Microsoft.OperationalInsights/workspaces/sharedKeys",
                "permissionsDisplayText": "read permissions to shared keys for the workspace are required. [See the documentation to learn more about workspace keys](https://docs.microsoft.com/azure/azure-monitor/platform/agent-windows#obtain-workspace-id-and-key).",
                "providerDisplayName": "Keys",
                "scope": "Workspace",
                "requiredPermissions": {
                  "action": true
                }
              }
            ]
          },
          "instructionSteps": [
            {
              "description": ">**NOTE:** This data connector depends on a parser based on a Kusto Function to work as expected. [Follow these steps](https://aka.ms/sentinel-IllumioCore-parser) to create the Kusto Functions alias, **IllumioCoreEvent**"
            },
            {
              "description": "Install and configure the Linux agent to collect your Common Event Format (CEF) Syslog messages and forward them to Microsoft Sentinel.\n\n> Notice that the data from all regions will be stored in the selected workspace",
              "innerSteps": [
                {
                  "title": "1.1 Select or create a Linux machine",
                  "description": "Select or create a Linux machine that Microsoft Sentinel will use as the proxy between your security solution and Microsoft Sentinel this machine can be on your on-prem environment, Azure or other clouds."
                },
                {
                  "title": "1.2 Install the CEF collector on the Linux machine",
                  "description": "Install the Microsoft Monitoring Agent on your Linux machine and configure the machine to listen on the necessary port and forward messages to your Microsoft Sentinel workspace. The CEF collector collects CEF messages on port 514 TCP.\n\n> 1. Make sure that you have Python on your machine using the following command: python -version.\n\n> 2. You must have elevated permissions (sudo) on your machine.",
                  "instructions": [
                    {
                      "parameters": {
                        "fillWith": [
                          "WorkspaceId",
                          "PrimaryKey"
                        ],
                        "label": "Run the following command to install and apply the CEF collector:",
                        "value": "sudo wget -O cef_installer.py https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/DataConnectors/CEF/cef_installer.py&&sudo python cef_installer.py {0} {1}"
                      },
                      "type": "CopyableLabel"
                    }
                  ]
                }
              ],
              "title": "1. Linux Syslog agent configuration"
            },
            {
              "description": "2.1 Configure Event Format\n\n 1. From the PCE web console menu, choose **Settings > Event Settings** to view your current settings.\n\n 2. Click **Edit** to change the settings.\n\n 3. Set **Event Format** to CEF.\n\n 4. (Optional) Configure **Event Severity** and **Retention Period**.\n\n2.2 Configure event forwarding to an external syslog server\n\n 1. From the PCE web console menu, choose **Settings > Event Settings**.\n\n 2. Click **Add**.\n\n 3. Click **Add Repository**.\n\n 4. Complete the **Add Repository** dialog.\n\n 5. Click **OK** to save the event forwarding configuration.",
              "title": "2. Configure Ilumio Core to send logs using CEF"
            },
            {
              "description": "Follow the instructions to validate your connectivity:\n\nOpen Log Analytics to check if the logs are received using the CommonSecurityLog schema.\n\n>It may take about 20 minutes until the connection streams data to your workspace.\n\nIf the logs are not received, run the following connectivity validation script:\n\n> 1. Make sure that you have Python on your machine using the following command: python -version\n\n>2. You must have elevated permissions (sudo) on your machine",
              "instructions": [
                {
                  "parameters": {
                    "fillWith": [
                      "WorkspaceId"
                    ],
                    "label": "Run the following command to validate your connectivity:",
                    "value": "sudo wget -O cef_troubleshoot.py https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/DataConnectors/CEF/cef_troubleshoot.py&&sudo python cef_troubleshoot.py  {0}"
                  },
                  "type": "CopyableLabel"
                }
              ],
              "title": "3. Validate connection"
            },
            {
              "description": "Make sure to configure the machine's security according to your organization's security policy\n\n\n[Learn more >](https://aka.ms/SecureCEF)",
              "title": "4. Secure your machine "
            }
          ],
          "id": "[variables('_uiConfigId1')]",
          "additionalRequirementBanner": "This data connector depends on a parser based on a Kusto Function to work as expected [**IllumioCoreEvent**](https://aka.ms/sentinel-IllumioCore-parser) which is deployed with the Microsoft Sentinel Solution."
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('parserTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Parser"
      },
      "properties": {
        "description": "IllumioCoreEvent Data Parser with template",
        "displayName": "IllumioCoreEvent Data Parser template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('parserTemplateSpecName1'),'/',variables('parserVersion1'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Parser"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('parserTemplateSpecName1'))]"
      ],
      "properties": {
        "description": "IllumioCoreEvent Data Parser with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('_parserName1')]",
              "apiVersion": "2020-08-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "IllumioCoreEvent",
                "category": "Samples",
                "functionAlias": "IllumioCoreEvent",
                "query": "\nCommonSecurityLog\r\n| where DeviceVendor =~ 'Illumio'\r\n| extend EventCount = int(1)\r\n| extend EventType = coalesce(\r\n                column_ifexists(\"DeviceEventCategory\", \"\"),\r\n                extract(@'outcome=(.*?)(?:;|$)',1, AdditionalExtensions, typeof(string)),\r\n                \"\"\r\n                )\r\n        ,EventResult = coalesce(\r\n                column_ifexists(\"EventOutcome\", \"\"),\r\n                extract(@'outcome=(.*?)(?:;|$)',1, AdditionalExtensions, typeof(string)),\r\n                \"\"\r\n                )\r\n        ,EventOriginalResultDetails = coalesce(\r\n                column_ifexists(\"Reason\", \"\"),\r\n                extract(@'reason=(.*?)(?:;|$)',1, AdditionalExtensions, typeof(string)),\r\n                \"\"\r\n                ),\r\n        SchemaVersion = coalesce(\r\n                tostring(column_ifexists(\"FieldDeviceCustomNumber2\", long(null))),\r\n                tostring(column_ifexists(\"DeviceCustomNumber2\",long(null)))\r\n                ),\r\n        EventStartTime =  coalesce(\r\n                StartTime,\r\n                extract(@'start=(.*?)(?:;|$)',1, AdditionalExtensions,typeof(datetime)),\r\n                todatetime(ReceiptTime),\r\n                datetime(null)\r\n                ),\r\n        EventEndTime =  coalesce(\r\n                EndTime,\r\n                extract(@'end=(.*?)(?:;|$)',1, AdditionalExtensions,typeof(datetime)),\r\n                todatetime(ReceiptTime),\r\n                datetime(null)\r\n                )\r\n        ,EventOriginalUid = case(DeviceCustomString1Label =~ 'event_href', DeviceCustomString1, '')\r\n        ,DstVulns = case(DeviceCustomString1Label =~ 'dst_vulns', DeviceCustomString1, '')\r\n        ,ResourceChanges = case(DeviceCustomString2Label =~ 'resource_changes', DeviceCustomString2, '')\r\n        ,State = case(DeviceCustomString2Label =~ 'state', DeviceCustomString2, '')\r\n        ,Notifications = case(DeviceCustomString4Label =~ 'notifications', DeviceCustomString4, '')\r\n        ,DstLabels = case(DeviceCustomString4Label =~ 'dst_labels', DeviceCustomString4, '')\r\n        ,DstHref = case(DeviceCustomString6Label =~ 'dst_href', DeviceCustomString6, '')\r\n| project-rename  EventVendor=DeviceVendor\r\n                , EventProduct=DeviceProduct\r\n                , EventProductVersion=DeviceVersion\r\n                , EventSubType=DeviceEventClassID\r\n                , EventSeverity=LogSeverity\r\n                , DvcAction=DeviceAction\r\n                , NetworkDirection=CommunicationDirection\r\n                , NetworkProtocol=Protocol\r\n                , UrlOriginal=RequestURL\r\n                , HttpRequestMethod=RequestMethod\r\n                , EventOriginalResult=Activity\r\n                , DstHostname=DestinationHostName\r\n                , DstIpAddr=DestinationIP\r\n                , DstPortNumber=DestinationPort\r\n                , ActingProcessName=DestinationProcessName\r\n                , DstUsername=DestinationUserName\r\n                , Dvc=DeviceName\r\n                , SrcBytes=SentBytes\r\n                , EventMessage=Message\r\n                , DstBytes=ReceivedBytes\r\n                , SrcIpAddr=SourceIP\r\n| project-away  AdditionalExtensions\r\n            ,   DeviceCustomNumber1\r\n            ,   DeviceCustomNumber1Label\r\n            ,   DeviceCustomNumber2\r\n            ,   DeviceCustomNumber2Label\r\n            ,   DeviceCustomString1\r\n            ,   DeviceCustomString1Label\r\n            ,   DeviceCustomString2\r\n            ,   DeviceCustomString2Label\r\n            ,   DeviceCustomString3\r\n            ,   DeviceCustomString3Label\r\n            ,   DeviceCustomString4\r\n            ,   DeviceCustomString4Label\r\n            ,   DeviceCustomString5\r\n            ,   DeviceCustomString5Label\r\n            ,   DeviceCustomString6\r\n            ,   DeviceCustomString6Label\r\n            ,   DeviceCustomDate1Label\r\n            ,   DeviceCustomDate1\r\n            ,   DeviceCustomDate2Label\r\n            ,   DeviceCustomDate2\r\n            ,   FlexString1Label\r\n            ,   FlexString1\r\n            ,   FlexString2Label\r\n            ,   FlexString2\r\n            ,   DeviceCustomFloatingPoint1Label\r\n            ,   DeviceCustomFloatingPoint1\r\n            ,   DeviceCustomFloatingPoint2Label\r\n            ,   DeviceCustomFloatingPoint2\r\n            ,   DeviceCustomIPv6Address1Label\r\n            ,   DeviceCustomIPv6Address1\r\n            ,   DeviceCustomIPv6Address2Label\r\n            ,   DeviceCustomIPv6Address2\r\n            ,   DeviceCustomIPv6Address3Label\r\n            ,   DeviceCustomIPv6Address3\r\n            ,   SimplifiedDeviceAction\r\n            ,   OriginalLogSeverity\r\n            ,   ApplicationProtocol\r\n            ,   DestinationDnsDomain\r\n            ,   DestinationServiceName\r\n            ,   DestinationTranslatedAddress\r\n            ,   DestinationTranslatedPort\r\n            ,   DeviceDnsDomain\r\n            ,   DeviceExternalID\r\n            ,   DeviceFacility\r\n            ,   DeviceInboundInterface\r\n            ,   DeviceNtDomain\r\n            ,   DeviceOutboundInterface\r\n            ,   DevicePayloadId\r\n            ,   ProcessName\r\n            ,   DeviceTranslatedAddress\r\n            ,   DestinationMACAddress\r\n            ,   DestinationNTDomain\r\n            ,   DestinationProcessId\r\n            ,   DestinationUserPrivileges\r\n            ,   DeviceTimeZone\r\n            ,   DestinationUserID\r\n            ,   DeviceAddress\r\n            ,   DeviceMacAddress\r\n            ,   ProcessID\r\n            ,   EndTime\r\n            ,   ExternalID\r\n            ,   FileCreateTime\r\n            ,   FileHash\r\n            ,   FileID\r\n            ,   FileModificationTime\r\n            ,   FilePath\r\n            ,   FilePermission\r\n            ,   FileType\r\n            ,   FileName\r\n            ,   FileSize\r\n            ,   OldFileCreateTime\r\n            ,   OldFileHash\r\n            ,   OldFileID\r\n            ,   OldFileModificationTime\r\n            ,   OldFileName\r\n            ,   OldFilePath\r\n            ,   OldFilePermission\r\n            ,   OldFileSize\r\n            ,   OldFileType\r\n            ,   ReceiptTime\r\n            ,   RequestClientApplication\r\n            ,   RequestContext\r\n            ,   RequestCookies\r\n            ,   SourceHostName\r\n            ,   SourceMACAddress\r\n            ,   SourceNTDomain\r\n            ,   SourceDnsDomain\r\n            ,   SourceServiceName\r\n            ,   SourceTranslatedAddress\r\n            ,   SourceTranslatedPort\r\n            ,   SourceProcessId\r\n            ,   SourceUserPrivileges\r\n            ,   SourceProcessName\r\n            ,   SourcePort\r\n            ,   StartTime\r\n            ,   SourceUserID\r\n            ,   SourceUserName\r\n            ,   DeviceCustomIPv6Address4\r\n            ,   DeviceCustomIPv6Address4Label\r\n            ,   DeviceCustomFloatingPoint3\r\n            ,   DeviceCustomFloatingPoint3Label\r\n            ,   DeviceCustomFloatingPoint4\r\n            ,   DeviceCustomFloatingPoint4Label\r\n            ,   DeviceCustomNumber3\r\n            ,   DeviceCustomNumber3Label\r\n            ,   FlexDate1\r\n            ,   FlexDate1Label\r\n            ,   FlexNumber1\r\n            ,   FlexNumber1Label\r\n            ,   FlexNumber2\r\n            ,   FlexNumber2Label\r\n            ,   RemoteIP\r\n            ,   RemotePort\r\n            ,   MaliciousIP\r\n            ,   ThreatSeverity\r\n            ,   IndicatorThreatType\r\n            ,   ThreatDescription\r\n            ,   ThreatConfidence\r\n            ,   ReportReferenceLink\r\n            ,   MaliciousIPLongitude\r\n            ,   MaliciousIPLatitude\r\n            ,   MaliciousIPCountry",
                "version": 1,
                "tags": [
                  {
                    "name": "description",
                    "value": "IllumioCoreEvent"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId1'),'/'))))]",
              "dependsOn": [
                "[variables('_parserName1')]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName1'))]",
                "contentId": "[variables('_parserContentId1')]",
                "kind": "Parser",
                "version": "[variables('parserVersion1')]",
                "source": {
                  "name": "Illumio Core",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft"
                },
                "support": {
                  "name": "Microsoft",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2021-06-01",
      "name": "[variables('_parserName1')]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "IllumioCoreEvent",
        "category": "Samples",
        "functionAlias": "IllumioCoreEvent",
        "query": "\nCommonSecurityLog\r\n| where DeviceVendor =~ 'Illumio'\r\n| extend EventCount = int(1)\r\n| extend EventType = coalesce(\r\n                column_ifexists(\"DeviceEventCategory\", \"\"),\r\n                extract(@'outcome=(.*?)(?:;|$)',1, AdditionalExtensions, typeof(string)),\r\n                \"\"\r\n                )\r\n        ,EventResult = coalesce(\r\n                column_ifexists(\"EventOutcome\", \"\"),\r\n                extract(@'outcome=(.*?)(?:;|$)',1, AdditionalExtensions, typeof(string)),\r\n                \"\"\r\n                )\r\n        ,EventOriginalResultDetails = coalesce(\r\n                column_ifexists(\"Reason\", \"\"),\r\n                extract(@'reason=(.*?)(?:;|$)',1, AdditionalExtensions, typeof(string)),\r\n                \"\"\r\n                ),\r\n        SchemaVersion = coalesce(\r\n                tostring(column_ifexists(\"FieldDeviceCustomNumber2\", long(null))),\r\n                tostring(column_ifexists(\"DeviceCustomNumber2\",long(null)))\r\n                ),\r\n        EventStartTime =  coalesce(\r\n                StartTime,\r\n                extract(@'start=(.*?)(?:;|$)',1, AdditionalExtensions,typeof(datetime)),\r\n                todatetime(ReceiptTime),\r\n                datetime(null)\r\n                ),\r\n        EventEndTime =  coalesce(\r\n                EndTime,\r\n                extract(@'end=(.*?)(?:;|$)',1, AdditionalExtensions,typeof(datetime)),\r\n                todatetime(ReceiptTime),\r\n                datetime(null)\r\n                )\r\n        ,EventOriginalUid = case(DeviceCustomString1Label =~ 'event_href', DeviceCustomString1, '')\r\n        ,DstVulns = case(DeviceCustomString1Label =~ 'dst_vulns', DeviceCustomString1, '')\r\n        ,ResourceChanges = case(DeviceCustomString2Label =~ 'resource_changes', DeviceCustomString2, '')\r\n        ,State = case(DeviceCustomString2Label =~ 'state', DeviceCustomString2, '')\r\n        ,Notifications = case(DeviceCustomString4Label =~ 'notifications', DeviceCustomString4, '')\r\n        ,DstLabels = case(DeviceCustomString4Label =~ 'dst_labels', DeviceCustomString4, '')\r\n        ,DstHref = case(DeviceCustomString6Label =~ 'dst_href', DeviceCustomString6, '')\r\n| project-rename  EventVendor=DeviceVendor\r\n                , EventProduct=DeviceProduct\r\n                , EventProductVersion=DeviceVersion\r\n                , EventSubType=DeviceEventClassID\r\n                , EventSeverity=LogSeverity\r\n                , DvcAction=DeviceAction\r\n                , NetworkDirection=CommunicationDirection\r\n                , NetworkProtocol=Protocol\r\n                , UrlOriginal=RequestURL\r\n                , HttpRequestMethod=RequestMethod\r\n                , EventOriginalResult=Activity\r\n                , DstHostname=DestinationHostName\r\n                , DstIpAddr=DestinationIP\r\n                , DstPortNumber=DestinationPort\r\n                , ActingProcessName=DestinationProcessName\r\n                , DstUsername=DestinationUserName\r\n                , Dvc=DeviceName\r\n                , SrcBytes=SentBytes\r\n                , EventMessage=Message\r\n                , DstBytes=ReceivedBytes\r\n                , SrcIpAddr=SourceIP\r\n| project-away  AdditionalExtensions\r\n            ,   DeviceCustomNumber1\r\n            ,   DeviceCustomNumber1Label\r\n            ,   DeviceCustomNumber2\r\n            ,   DeviceCustomNumber2Label\r\n            ,   DeviceCustomString1\r\n            ,   DeviceCustomString1Label\r\n            ,   DeviceCustomString2\r\n            ,   DeviceCustomString2Label\r\n            ,   DeviceCustomString3\r\n            ,   DeviceCustomString3Label\r\n            ,   DeviceCustomString4\r\n            ,   DeviceCustomString4Label\r\n            ,   DeviceCustomString5\r\n            ,   DeviceCustomString5Label\r\n            ,   DeviceCustomString6\r\n            ,   DeviceCustomString6Label\r\n            ,   DeviceCustomDate1Label\r\n            ,   DeviceCustomDate1\r\n            ,   DeviceCustomDate2Label\r\n            ,   DeviceCustomDate2\r\n            ,   FlexString1Label\r\n            ,   FlexString1\r\n            ,   FlexString2Label\r\n            ,   FlexString2\r\n            ,   DeviceCustomFloatingPoint1Label\r\n            ,   DeviceCustomFloatingPoint1\r\n            ,   DeviceCustomFloatingPoint2Label\r\n            ,   DeviceCustomFloatingPoint2\r\n            ,   DeviceCustomIPv6Address1Label\r\n            ,   DeviceCustomIPv6Address1\r\n            ,   DeviceCustomIPv6Address2Label\r\n            ,   DeviceCustomIPv6Address2\r\n            ,   DeviceCustomIPv6Address3Label\r\n            ,   DeviceCustomIPv6Address3\r\n            ,   SimplifiedDeviceAction\r\n            ,   OriginalLogSeverity\r\n            ,   ApplicationProtocol\r\n            ,   DestinationDnsDomain\r\n            ,   DestinationServiceName\r\n            ,   DestinationTranslatedAddress\r\n            ,   DestinationTranslatedPort\r\n            ,   DeviceDnsDomain\r\n            ,   DeviceExternalID\r\n            ,   DeviceFacility\r\n            ,   DeviceInboundInterface\r\n            ,   DeviceNtDomain\r\n            ,   DeviceOutboundInterface\r\n            ,   DevicePayloadId\r\n            ,   ProcessName\r\n            ,   DeviceTranslatedAddress\r\n            ,   DestinationMACAddress\r\n            ,   DestinationNTDomain\r\n            ,   DestinationProcessId\r\n            ,   DestinationUserPrivileges\r\n            ,   DeviceTimeZone\r\n            ,   DestinationUserID\r\n            ,   DeviceAddress\r\n            ,   DeviceMacAddress\r\n            ,   ProcessID\r\n            ,   EndTime\r\n            ,   ExternalID\r\n            ,   FileCreateTime\r\n            ,   FileHash\r\n            ,   FileID\r\n            ,   FileModificationTime\r\n            ,   FilePath\r\n            ,   FilePermission\r\n            ,   FileType\r\n            ,   FileName\r\n            ,   FileSize\r\n            ,   OldFileCreateTime\r\n            ,   OldFileHash\r\n            ,   OldFileID\r\n            ,   OldFileModificationTime\r\n            ,   OldFileName\r\n            ,   OldFilePath\r\n            ,   OldFilePermission\r\n            ,   OldFileSize\r\n            ,   OldFileType\r\n            ,   ReceiptTime\r\n            ,   RequestClientApplication\r\n            ,   RequestContext\r\n            ,   RequestCookies\r\n            ,   SourceHostName\r\n            ,   SourceMACAddress\r\n            ,   SourceNTDomain\r\n            ,   SourceDnsDomain\r\n            ,   SourceServiceName\r\n            ,   SourceTranslatedAddress\r\n            ,   SourceTranslatedPort\r\n            ,   SourceProcessId\r\n            ,   SourceUserPrivileges\r\n            ,   SourceProcessName\r\n            ,   SourcePort\r\n            ,   StartTime\r\n            ,   SourceUserID\r\n            ,   SourceUserName\r\n            ,   DeviceCustomIPv6Address4\r\n            ,   DeviceCustomIPv6Address4Label\r\n            ,   DeviceCustomFloatingPoint3\r\n            ,   DeviceCustomFloatingPoint3Label\r\n            ,   DeviceCustomFloatingPoint4\r\n            ,   DeviceCustomFloatingPoint4Label\r\n            ,   DeviceCustomNumber3\r\n            ,   DeviceCustomNumber3Label\r\n            ,   FlexDate1\r\n            ,   FlexDate1Label\r\n            ,   FlexNumber1\r\n            ,   FlexNumber1Label\r\n            ,   FlexNumber2\r\n            ,   FlexNumber2Label\r\n            ,   RemoteIP\r\n            ,   RemotePort\r\n            ,   MaliciousIP\r\n            ,   ThreatSeverity\r\n            ,   IndicatorThreatType\r\n            ,   ThreatDescription\r\n            ,   ThreatConfidence\r\n            ,   ReportReferenceLink\r\n            ,   MaliciousIPLongitude\r\n            ,   MaliciousIPLatitude\r\n            ,   MaliciousIPCountry",
        "version": 1
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId1'),'/'))))]",
      "dependsOn": [
        "[variables('_parserId1')]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName1'))]",
        "contentId": "[variables('_parserContentId1')]",
        "kind": "Parser",
        "version": "[variables('parserVersion1')]",
        "source": {
          "kind": "Solution",
          "name": "Illumio Core",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Microsoft"
        },
        "support": {
          "name": "Microsoft",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "version": "2.0.0",
        "kind": "Solution",
        "contentSchemaVersion": "2.0.0",
        "contentId": "[variables('_solutionId')]",
        "parentId": "[variables('_solutionId')]",
        "source": {
          "kind": "Solution",
          "name": "Illumio Core",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Microsoft"
        },
        "support": {
          "name": "Microsoft",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        },
        "dependencies": {
          "operator": "AND",
          "criteria": [
            {
              "kind": "DataConnector",
              "contentId": "[variables('_dataConnectorContentId1')]",
              "version": "[variables('dataConnectorVersion1')]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('_parserContentId1')]",
              "version": "[variables('parserVersion1')]"
            }
          ]
        },
        "firstPublishDate": "2022-05-26",
        "providers": [
          "Illumio"
        ],
        "categories": {
          "domains": [
            "Security - Threat Protection"
          ]
        }
      },
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_solutionId'))]"
    }
  ],
  "outputs": {}
}
