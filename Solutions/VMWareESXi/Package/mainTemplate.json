{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "author": "Manoj Arimanda - v-marimanda@microsoft.com",
    "comments": "Solution template for VMware ESXi"
  },
  "parameters": {
    "location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
      }
    },
    "workspace-location": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "[concat('Region to deploy solution resources -- separate from location selection',parameters('location'))]"
      }
    },
    "workspace": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Workspace name for Log Analytics where Sentinel is setup"
      }
    },
    "formattedTimeNow": {
      "type": "string",
      "defaultValue": "[utcNow('g')]",
      "metadata": {
        "description": "Appended to workbook displayNames to make them unique"
      }
    },
    "workbook1-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the workbook"
      }
    },
    "workbook1-name": {
      "type": "string",
      "defaultValue": "VMware ESXi",
      "minLength": 1,
      "metadata": {
        "description": "Name for the workbook"
      }
    },
    "connector1-name": {
      "type": "string",
      "defaultValue": "0ec05a10-c6f8-4913-820a-d437284cff0f"
    },
    "analytic1-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic2-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic3-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic4-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic5-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic6-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic7-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic8-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic9-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic10-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic11-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    }
  },
  "variables": {
    "VMwareESXi_workbook": "VMwareESXi_workbook",
    "_VMwareESXi_workbook": "[variables('VMwareESXi_workbook')]",
    "workbook-source": "[concat(resourceGroup().id, '/providers/Microsoft.OperationalInsights/workspaces/',parameters('workspace'))]",
    "_workbook-source": "[variables('workbook-source')]",
    "workspace-dependency": "[concat('Microsoft.OperationalInsights/workspaces/', parameters('workspace'))]",
    "VMwareESXi_Parser": "VMwareESXi_Parser",
    "_VMwareESXi_Parser": "[variables('VMwareESXi_Parser')]",
    "ESXiDormantUsers_HuntingQueries": "ESXiDormantUsers_HuntingQueries",
    "_ESXiDormantUsers_HuntingQueries": "[variables('ESXiDormantUsers_HuntingQueries')]",
    "ESXiDownloadErrors_HuntingQueries": "ESXiDownloadErrors_HuntingQueries",
    "_ESXiDownloadErrors_HuntingQueries": "[variables('ESXiDownloadErrors_HuntingQueries')]",
    "ESXiNFCDownloadActivities_HuntingQueries": "ESXiNFCDownloadActivities_HuntingQueries",
    "_ESXiNFCDownloadActivities_HuntingQueries": "[variables('ESXiNFCDownloadActivities_HuntingQueries')]",
    "ESXiRootLoginFailure_HuntingQueries": "ESXiRootLoginFailure_HuntingQueries",
    "_ESXiRootLoginFailure_HuntingQueries": "[variables('ESXiRootLoginFailure_HuntingQueries')]",
    "ESXiRootLogins_HuntingQueries": "ESXiRootLogins_HuntingQueries",
    "_ESXiRootLogins_HuntingQueries": "[variables('ESXiRootLogins_HuntingQueries')]",
    "ESXiUnusedVMs_HuntingQueries": "ESXiUnusedVMs_HuntingQueries",
    "_ESXiUnusedVMs_HuntingQueries": "[variables('ESXiUnusedVMs_HuntingQueries')]",
    "ESXiVMHighLoad_HuntingQueries": "ESXiVMHighLoad_HuntingQueries",
    "_ESXiVMHighLoad_HuntingQueries": "[variables('ESXiVMHighLoad_HuntingQueries')]",
    "ESXiVMPoweredOff_HuntingQueries": "ESXiVMPoweredOff_HuntingQueries",
    "_ESXiVMPoweredOff_HuntingQueries": "[variables('ESXiVMPoweredOff_HuntingQueries')]",
    "ESXiVMPoweredOn_HuntingQueries": "ESXiVMPoweredOn_HuntingQueries",
    "_ESXiVMPoweredOn_HuntingQueries": "[variables('ESXiVMPoweredOn_HuntingQueries')]",
    "ESXiVirtualImagesList_HuntingQueries": "ESXiVirtualImagesList_HuntingQueries",
    "_ESXiVirtualImagesList_HuntingQueries": "[variables('ESXiVirtualImagesList_HuntingQueries')]",
    "connector1-source": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.OperationalInsights/workspaces/',parameters('workspace'),'/providers/Microsoft.SecurityInsights/dataConnectors/',parameters('connector1-name'))]",
    "_connector1-source": "[variables('connector1-source')]",
    "VMwareESXiConnector": "VMwareESXiConnector",
    "_VMwareESXiConnector": "[variables('VMwareESXiConnector')]",
    "ESXiDormantVMStarted_AnalyticalRules": "ESXiDormantVMStarted_AnalyticalRules",
    "_ESXiDormantVMStarted_AnalyticalRules": "[variables('ESXiDormantVMStarted_AnalyticalRules')]",
    "ESXiLowPatchDiskSpace_AnalyticalRules": "ESXiLowPatchDiskSpace_AnalyticalRules",
    "_ESXiLowPatchDiskSpace_AnalyticalRules": "[variables('ESXiLowPatchDiskSpace_AnalyticalRules')]",
    "ESXiLowTempDirSpace_AnalyticalRules": "ESXiLowTempDirSpace_AnalyticalRules",
    "_ESXiLowTempDirSpace_AnalyticalRules": "[variables('ESXiLowTempDirSpace_AnalyticalRules')]",
    "ESXiMultipleNewVM_AnalyticalRules": "ESXiMultipleNewVM_AnalyticalRules",
    "_ESXiMultipleNewVM_AnalyticalRules": "[variables('ESXiMultipleNewVM_AnalyticalRules')]",
    "ESXiMultipleVMStopped_AnalyticalRules": "ESXiMultipleVMStopped_AnalyticalRules",
    "_ESXiMultipleVMStopped_AnalyticalRules": "[variables('ESXiMultipleVMStopped_AnalyticalRules')]",
    "ESXiNewVM_AnalyticalRules": "ESXiNewVM_AnalyticalRules",
    "_ESXiNewVM_AnalyticalRules": "[variables('ESXiNewVM_AnalyticalRules')]",
    "ESXiRootImpersonation_AnalyticalRules": "ESXiRootImpersonation_AnalyticalRules",
    "_ESXiRootImpersonation_AnalyticalRules": "[variables('ESXiRootImpersonation_AnalyticalRules')]",
    "ESXiRootLogin_AnalyticalRules": "ESXiRootLogin_AnalyticalRules",
    "_ESXiRootLogin_AnalyticalRules": "[variables('ESXiRootLogin_AnalyticalRules')]",
    "ESXiSharedOrStolenRootAccount_AnalyticalRules": "ESXiSharedOrStolenRootAccount_AnalyticalRules",
    "_ESXiSharedOrStolenRootAccount_AnalyticalRules": "[variables('ESXiSharedOrStolenRootAccount_AnalyticalRules')]",
    "ESXiUnexpectedDiskImage_AnalyticalRules": "ESXiUnexpectedDiskImage_AnalyticalRules",
    "_ESXiUnexpectedDiskImage_AnalyticalRules": "[variables('ESXiUnexpectedDiskImage_AnalyticalRules')]",
    "ESXiVMStopped_AnalyticalRules": "ESXiVMStopped_AnalyticalRules",
    "_ESXiVMStopped_AnalyticalRules": "[variables('ESXiVMStopped_AnalyticalRules')]",
    "sourceId": "azuresentinel.azure-sentinel-solution-vmwareesxi",
    "_sourceId": "[variables('sourceId')]"
  },
  "resources": [
    {
      "type": "Microsoft.Insights/workbooks",
      "name": "[parameters('workbook1-id')]",
      "location": "[parameters('workspace-location')]",
      "kind": "shared",
      "apiVersion": "2021-08-01",
      "properties": {
        "displayName": "[concat(parameters('workbook1-name'), ' - ', parameters('formattedTimeNow'))]",
        "serializedData": "{\"version\":\"Notebook/1.0\",\"items\":[{\"type\":1,\"content\":{\"json\":\"**NOTE**: This data connector depends on a parser based on Kusto Function **VMwareESXi** to work as expected. [Follow steps to get this Kusto Function](https://aka.ms/sentinel-vmwareesxi-parser)\"},\"name\":\"text - 8\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"cd8447d9-b096-4673-92d8-2a1e8291a125\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"TimeRange\",\"type\":4,\"description\":\"Sets the time name for analysis\",\"value\":{\"durationMs\":7776000000},\"typeSettings\":{\"selectableValues\":[{\"durationMs\":1800000},{\"durationMs\":3600000},{\"durationMs\":86400000},{\"durationMs\":604800000},{\"durationMs\":2592000000},{\"durationMs\":7776000000}]},\"timeContext\":{\"durationMs\":86400000}}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"parameters - 11\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VMwareESXi\\r\\n| make-series TotalEvents = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain};\",\"size\":0,\"title\":\"Events Over Time\",\"color\":\"blueDark\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"timechart\",\"graphSettings\":{\"type\":0}},\"customWidth\":\"60\",\"name\":\"query - 12\",\"styleSettings\":{\"maxWidth\":\"55\"}},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"title\":\"Environment Summary\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VMwareESXi\\r\\n| where SyslogMessage has 'VmPoweredOnEvent'\\r\\n| extend DstHostname = extract(@'\\\\[\\\\d+\\\\]\\\\s+\\\\[(.*?)\\\\s+on', 1, SyslogMessage)\\r\\n| summarize dcount(DstHostname)\",\"size\":3,\"title\":\"Total VMs\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"card\",\"textSettings\":{\"style\":\"bignumber\"}},\"customWidth\":\"50\",\"name\":\"query - 3\",\"styleSettings\":{\"margin\":\"10\",\"padding\":\"10\"}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VMwareESXi\\n| where SyslogMessage has_all ('UserLoginSessionEvent', 'logged in')\\n| extend SrcUsername = extract(@'User\\\\s(.*?)@\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}', 1, SyslogMessage)\\n| summarize dcount(SrcUsername)\",\"size\":3,\"title\":\"Users\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"card\",\"textSettings\":{\"style\":\"bignumber\"}},\"customWidth\":\"50\",\"name\":\"query - 1\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VMwareESXi\\n| where SyslogMessage has_all ('UserLoginSessionEvent', 'logged in')\\n| extend SrcIpAddr = extract(@'root@(\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3})', 1, SyslogMessage)\\n| summarize dcount(SrcIpAddr)\",\"size\":3,\"title\":\"Total IP Addreses\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"card\",\"textSettings\":{\"style\":\"bignumber\"}},\"customWidth\":\"40\",\"name\":\"query - 2\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VMwareESXi\\n| where SyslogMessage has ('Patch store disk')\\n| extend sp = tolong(extract(@'free space is:\\\\s(\\\\d+)', 1, SyslogMessage)) / 1000000000\\n| project ds = strcat(tostring(sp), ' GB')\",\"size\":3,\"title\":\"Patch Disk Space Available\",\"noDataMessage\":\"0\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"card\",\"textSettings\":{\"style\":\"bignumber\"}},\"customWidth\":\"25\",\"name\":\"query - 3\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VMwareESXi\\n| where SyslogMessage has_all ('Temp directory', 'free space')\\n| extend sp = tolong(extract(@'free space is:\\\\s(\\\\d+)', 1, SyslogMessage)) / 1000000000\\n| project tmp_sp = strcat(sp, ' GB')\",\"size\":3,\"title\":\"Temp Disk Space Available\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"card\",\"textSettings\":{\"style\":\"bignumber\"}},\"customWidth\":\"25\",\"name\":\"query - 4\"}]},\"customWidth\":\"40\",\"name\":\"group - 11\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VMwareESXi\\n| where SyslogMessage has ('VmPoweredOffEvent')\\n| extend DstHostname = extract(@'\\\\[\\\\d+\\\\]\\\\s+\\\\[(.*?)\\\\s+on', 1, SyslogMessage)\\n| summarize off_t = max(TimeGenerated) by DstHostname\\n| project DstHostname, Status=strcat(iff(isnotempty(off_t), '❌ - Powered Off', '✅ - Running'))\\n\",\"size\":3,\"title\":\"VM status\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\"},\"customWidth\":\"30\",\"name\":\"query - 11\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VMwareESXi\\n| where SyslogMessage has_all ('UserLoginSessionEvent', 'logged in')\\n| extend SrcIpAddr = extract(@'@(\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3})', 1, SyslogMessage)\\n| where isnotempty(SrcIpAddr)\\n| summarize count() by SrcIpAddr\",\"size\":3,\"title\":\"Source Addresses\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\"},\"customWidth\":\"25\",\"name\":\"query - 9\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VMwareESXi\\r\\n| where SyslogMessage has_any ('UserLoginSessionEvent', 'UserLogoutSessionEvent')\\r\\n| extend SrcIpAddr = extract(@'@(\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3})', 1, SyslogMessage)\\r\\n| extend SrcUsername = extract(@'User\\\\s(.*?)@\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}', 1, SyslogMessage)\\r\\n| project EventTime=TimeGenerated, User=SrcUsername, SourceAddress=SrcIpAddr, Status=strcat(iff(SyslogMessage has 'UserLoginSessionEvent', '✅ - Logged in', '❌ - Logged out' ))\\r\\n\",\"size\":0,\"title\":\"User Sessions\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"filter\":true},\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"URL Category\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"count_\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"maximumFractionDigits\":2,\"maximumSignificantDigits\":3}}},\"secondaryContent\":{\"columnMatch\":\"Trend\",\"formatter\":9,\"formatOptions\":{\"palette\":\"purple\"}},\"showBorder\":false}},\"customWidth\":\"45\",\"name\":\"query - 0\",\"styleSettings\":{\"maxWidth\":\"30\"}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VMwareESXi\\n| where SyslogMessage has_all ('UserLoginSessionEvent', 'denis', 'logged in')\\n//| extend SrcUsername = extract(@'User\\\\s(.*?)@\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}', 1, SyslogMessage)\\n| extend SrcIpAddr = extract(@'@(\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3})', 1, SyslogMessage)\\n| order by TimeGenerated\\n| project EventTime = TimeGenerated, SourceAddress = SrcIpAddr\",\"size\":0,\"title\":\"Root Sessions\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"User\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"TotalMailsReceived\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}},\"secondaryContent\":{\"columnMatch\":\"Trend\",\"formatter\":10,\"formatOptions\":{\"palette\":\"magenta\"}},\"showBorder\":false}},\"customWidth\":\"30\",\"name\":\"query - 10\"}],\"fromTemplateId\":\"sentinel-VMwareESXiWorkbook\",\"$schema\":\"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\"}\r\n",
        "version": "1.0",
        "sourceId": "[variables('_workbook-source')]",
        "category": "sentinel"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2020-08-01",
      "name": "[parameters('workspace')]",
      "location": "[parameters('workspace-location')]",
      "resources": [
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "VMware ESXi Data Parser",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "VMware ESXi Data Parser",
            "category": "Samples",
            "functionAlias": "VMwareESXi",
            "query": "\nlet LogHeader = Syslog\r\n| where Computer in (\"ESXiserver1\", \"ESXiserver2\") // ESXiserver1 and ESXiserver2 are examples, replace this list with your ESXi devices\r\n| extend Parser = extract_all(@\"^(\\w+)?\\s?(\\w+)\\[(\\w+)\\]\\s([\\s\\S]+)\", dynamic([1,2,3,4]), SyslogMessage)\r\n| mv-expand Parser\r\n| extend Substring = tostring(Parser[3])\r\n| project-away Parser;\r\nLogHeader\r\n| extend Sub = extract(@\"sub=([\\w\\d\\(\\)\\-\\.]+)\\]?\",1, Substring),\r\n\t OpId = extract(@\"opID=([\\w\\d\\(\\)\\-@]+)\\s?\\]?\",1, Substring),\r\n         UserName = extract(@\"\\suser=([\\w\\d\\(\\)\\-]+)\\]\",1, Substring)\r\n| extend Message = extract(@\"\\[([\\S\\s]+)\\]\\s([\\S\\s]+)\",2, Substring)\r\n| extend Message = iif(isempty(Message),SyslogMessage,Message)\r\n| extend Message = trim(@\"^-- \", Message)\r\n| project-away Substring\r\n",
            "version": 1
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "VMware ESXi Hunting Query 1",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "VMware ESXi - List of dormant users.",
            "category": "Hunting Queries",
            "query": "VMwareESXi\n| where TimeGenerated > ago(30d)\n| where SyslogMessage has_all ('UserLoginSessionEvent', 'logged in')\n| extend SrcUsername = extract(@'User\\s(.*?)@\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}', 1, SyslogMessage)\n| summarize LastLoginTime=max(TimeGenerated) by SrcUsername\n| extend AccountCustomEntity = SrcUsername\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "Query searches for dormant user dormant."
              },
              {
                "name": "tactics",
                "value": "InitialAccess"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "VMware ESXi Hunting Query 2",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "VMware ESXi - Download errors",
            "category": "Hunting Queries",
            "query": "VMwareESXi\n| where TimeGenerated > ago(24h)\n| where SyslogMessage has_any ('Download failed', 'Failed to download file', 'File download error')\n| extend URLCustomEntity = SyslogMessage\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "Query searches for download errors."
              },
              {
                "name": "tactics",
                "value": "InitialAccess"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "VMware ESXi Hunting Query 3",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "VMware ESXi - NFC download activities",
            "category": "Hunting Queries",
            "query": "VMwareESXi\n| where TimeGenerated > ago(24h)\n| where SyslogMessage has_all ('NFC', 'operation', 'Download')\n| extend SrcUsername = extract(@'\\[info\\]\\s+\\[(.*?)\\]', 1, SyslogMessage)\n| extend path = extract(@\"for path '(.*?)'\\swas\", 1, SyslogMessage)\n| extend SrcIpAddr = extract(@\"initiated from '(\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})'\", 1, SyslogMessage)\n| extend Result = extract(@\"status\\s'(\\w+)'\", 1, SyslogMessage)\n| extend HostCustomEntity = DstHostname\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "Query searches for download activities."
              },
              {
                "name": "tactics",
                "value": "InitialAccess"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "VMware ESXi Hunting Query 4",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "VMware ESXi - Root logins failures",
            "category": "Hunting Queries",
            "query": "VMwareESXi\n| where TimeGenerated > ago(24h)\n| where SyslogMessage has_all ('UserLoginSessionEvent', 'root', 'fail')\n| extend SrcIpAddr = extract(@'root@(\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})', 1, SyslogMessage)\n| extend IPCustomEntity = SrcIpAddr\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "Query searches for failed root logins."
              },
              {
                "name": "tactics",
                "value": "InitialAccess,PrivilegeEscalation"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "VMware ESXi Hunting Query 5",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "VMware ESXi - Root logins",
            "category": "Hunting Queries",
            "query": "VMwareESXi\n| where TimeGenerated > ago(24h)\n| where SyslogMessage has_all ('UserLoginSessionEvent', 'root', 'logged in')\n| extend SrcIpAddr = extract(@'root@(\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})', 1, SyslogMessage)\n| extend IPCustomEntity = SrcIpAddr\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "Query searches for root logins."
              },
              {
                "name": "tactics",
                "value": "InitialAccess,PrivilegeEscalation"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "VMware ESXi Hunting Query 6",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "VMware ESXi - List of unused VMs",
            "category": "Hunting Queries",
            "query": "let vm_p_off =\nVMwareESXi\n| where TimeGenerated > ago(30d)\n| where SyslogMessage has ('VmPoweredOffEvent')\n| extend DstHostname = extract(@'\\[\\d+\\]\\s+\\[(.*?)\\s+on', 1, SyslogMessage)\n| summarize LastPowerOffTime=max(TimeGenerated) by DstHostname\n| where datetime_diff('day',ago(now),LastPowerOnTime) >= 20; \nlet vm_p_on =\nVMwareESXi\n| where TimeGenerated > ago(30d)\n| where SyslogMessage has ('VmPoweredOnEvent')\n| extend DstHostname = extract(@'\\[\\d+\\]\\s+\\[(.*?)\\s+on', 1, SyslogMessage)\n| summarize LastPowerOnTime=max(TimeGenerated) by DstHostname\n| where datetime_diff('day',ago(now),LastPowerOnTime) >= 20;\nlet off_vms =\nvm_p_on\n| join (vm_p_off) on DstHostname\n| where LastPowerOffTime > LastPowerOnTime\n| summarize p_off_vm = makeset(DstHostname)\n| extend k=1;\nlet p_on_vms =\nVMwareESXi\n| where TimeGenerated between (ago(24h) .. ago(now))\n| where SyslogMessage has ('VmPoweredOnEvent')\n| extend DstHostname = extract(@'\\[\\d+\\]\\s+\\[(.*?)\\s+on', 1, SyslogMessage)\n| extend k=1\n| join (off_vms) on k\n| where DstHostname !in (p_off_vm);\n| summarize rec_p_on = makeset(DstHostname)\nVMwareESXi\n| where TimeGenerated between (ago(24h) .. ago(now))\n| where SyslogMessage has ('VmPoweredOnEvent')\n| extend DstHostname = extract(@'\\[\\d+\\]\\s+\\[(.*?)\\s+on', 1, SyslogMessage)\n| extend k=1;\n| join (p_on_vms) on k\n| where DstHostname !in~ (rec_p_on)\n| extend HostCustomEntity = DstHostname\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "Query searches for unused VMs."
              },
              {
                "name": "tactics",
                "value": "InitialAccess"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "VMware ESXi Hunting Query 7",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "VMware ESXi - VM high resource load",
            "category": "Hunting Queries",
            "query": "let threshold = 50;\nVMwareESXi\n| where TimeGenerated > ago(24h)\n| where SyslogMessage has_any ('Virtual machine CPU usage', 'Virtual machine memory usage')\n| where SyslogMessage has_all ('AlarmStatusChangedEvent', 'Red')\n| extend DstHostname = extract(@\"usage'\\son\\s(.*?)\\schanged\", 1, SyslogMessage)\n| summarize count() by DstHostname, bin(TimeGenerated, 1h)\n| where count_ >= threshold\n| extend HostCustomEntity = DstHostname\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "Query searches for VMs with high resource consumption."
              },
              {
                "name": "tactics",
                "value": "Impact"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "VMware ESXi Hunting Query 8",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "VMware ESXi - List of powered off VMs",
            "category": "Hunting Queries",
            "query": "VMwareESXi\n| where TimeGenerated > ago(24h)\n| where SyslogMessage has ('VmPoweredOffEvent')\n| extend SrcUsername = extract(@'\\[info\\]\\s+\\[(.*?)\\]', 1, SyslogMessage)\n| extend DstHostname = extract(@'\\[\\d+\\]\\s+\\[(.*?)\\s+on', 1, SyslogMessage)\n| project TimeGenerated, SrcUsername, DstHostname\n| extend HostCustomEntity = DstHostname\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "Query searches for powered off VMs."
              },
              {
                "name": "tactics",
                "value": "Impact"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "VMware ESXi Hunting Query 9",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "VMware ESXi - List of powered on VMs",
            "category": "Hunting Queries",
            "query": "VMwareESXi\n| where TimeGenerated > ago(24h)\n| where SyslogMessage has ('VmPoweredOnEvent')\n| extend SrcUsername = extract(@'\\[info\\]\\s+\\[(.*?)\\]', 1, SyslogMessage)\n| extend DstHostname = extract(@'\\[\\d+\\]\\s+\\[(.*?)\\s+on', 1, SyslogMessage)\n| project TimeGenerated, SrcUsername, DstHostname\n| extend HostCustomEntity = DstHostname\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "Query searches for powered on VMs."
              },
              {
                "name": "tactics",
                "value": "InitialAccess"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "VMware ESXi Hunting Query 10",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "VMware ESXi - List of virtual disks (images)",
            "category": "Hunting Queries",
            "query": "VMwareESXi\n| where TimeGenerated > ago(24h)\n| where SyslogMessage has ('Matched discovered VM')\n| extend DstHostname = extract(@'vim.VirtualMachine\\S+,(.*?)\\]', 1, SyslogMessage)\n| extend ImageName = extract(@'ds:///vmfs/volumes/(.*)/(.*?),', 2, SyslogMessage)\n| summarize makeset(ImageName) by DstHostname\n| extend HostCustomEntity = DstHostname\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "Query searches for virtual disks (images) seen for VM."
              },
              {
                "name": "tactics",
                "value": "Impact"
              }
            ]
          }
        }
      ]
    },
    {
      "id": "[variables('_connector1-source')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('connector1-name'))]",
      "apiVersion": "2021-03-01-preview",
      "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
      "location": "[parameters('workspace-location')]",
      "kind": "GenericUI",
      "properties": {
        "connectorUiConfig": {
          "title": "VMware ESXi",
          "publisher": "VMWare",
          "descriptionMarkdown": "The [VMware ESXi](https://www.vmware.com/products/esxi-and-esx.html) connector allows you to easily connect your VMWare ESXi logs with Azure Sentinel This gives you more insight into your organization's ESXi servers and improves your security operation capabilities.",
          "graphQueries": [
            {
              "metricName": "Total data received",
              "legend": "VMwareESXi",
              "baseQuery": "VMwareESXi"
            }
          ],
          "sampleQueries": [
            {
              "description": "Total Events by Log Type",
              "query": "VMwareESXi \n| summarize count() by ProcessName"
            },
            {
              "description": "Top 10 ESXi Hosts Generating Events",
              "query": "VMwareESXi \n | summarize count() by HostName \n | top 10 by count_"
            }
          ],
          "dataTypes": [
            {
              "name": "Syslog (VMwareESXi)",
              "lastDataReceivedQuery": "VMwareESXi \n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            }
          ],
          "connectivityCriterias": [
            {
              "type": "IsConnectedQuery",
              "value": [
                "VMwareESXi \n      | where TimeGenerated > ago(3d)\n   |take 1\n         | project IsConnected = true"
              ]
            }
          ],
          "availability": {
            "status": 1,
            "isPreview": true
          },
          "permissions": {
            "resourceProvider": [
              {
                "provider": "Microsoft.OperationalInsights/workspaces",
                "permissionsDisplayText": "write permission is required.",
                "providerDisplayName": "Workspace",
                "scope": "Workspace",
                "requiredPermissions": {
                  "write": true,
                  "delete": true
                }
              }
            ],
            "customs": [
              {
                "name": "VMwareESXi",
                "description": "must be configured to export logs via Syslog"
              }
            ]
          },
          "instructionSteps": [
            {
              "description": ">This data connector depends on a parser based on a Kusto Function to work as expected. [Follow the steps](https://aka.ms/sentinel-vmwareesxi-parser) to use the Kusto function alias, **VMwareESXi**"
            },
            {
              "description": "Typically, you should install the agent on a different computer from the one on which the logs are generated.\n\n>  Syslog logs are collected only from **Linux** agents.",
              "instructions": [
                {
                  "parameters": {
                    "title": "Choose where to install the agent:",
                    "instructionSteps": [
                      {
                        "title": "Install agent on Azure Linux Virtual Machine",
                        "description": "Select the machine to install the agent on and then click **Connect**.",
                        "instructions": [
                          {
                            "parameters": {
                              "linkType": "InstallAgentOnLinuxVirtualMachine"
                            },
                            "type": "InstallAgent"
                          }
                        ]
                      },
                      {
                        "title": "Install agent on a non-Azure Linux Machine",
                        "description": "Download the agent on the relevant machine and follow the instructions.",
                        "instructions": [
                          {
                            "parameters": {
                              "linkType": "InstallAgentOnLinuxNonAzure"
                            },
                            "type": "InstallAgent"
                          }
                        ]
                      }
                    ]
                  },
                  "type": "InstructionStepsGroup"
                }
              ],
              "title": "1. Install and onboard the agent for Linux"
            },
            {
              "description": "Configure the facilities you want to collect and their severities.\n 1. Under workspace advanced settings **Configuration**, select **Data** and then **Syslog**.\n 2. Select **Apply below configuration to my machines** and select the facilities and severities.\n 3.  Click **Save**.",
              "instructions": [
                {
                  "parameters": {
                    "linkType": "OpenSyslogSettings"
                  },
                  "type": "InstallAgent"
                }
              ],
              "title": "2. Configure the logs to be collected"
            },
            {
              "description": "1. Follow these instructions to configure the VMWare ESXi to forward syslog: \n - [VMware ESXi 3.5 and 4.x](https://kb.vmware.com/s/article/1016621) \n - [VMware ESXi 5.0+](https://docs.vmware.com/en/VMware-vSphere/5.5/com.vmware.vsphere.monitoring.doc/GUID-9F67DB52-F469-451F-B6C8-DAE8D95976E7.html)\n2. Use the IP address or hostname for the Linux device with the Linux agent installed as the Destination IP address.",
              "title": "3. Configure and connect the VMware ESXi"
            }
          ],
          "additionalRequirementBanner": "These queries and workbooks are dependent on a parser based on a Kusto Function to work as expected. Follow the steps to use this Kusto functions alias **VMwareESXi** in queries and workbooks. [Follow these steps to get this Kusto functions.](https://aka.ms/sentinel-vmwareesxi-parser)"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic1-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Detects when dormant VM was started.",
        "displayName": "VMware ESXi - Dormant VM started",
        "enabled": false,
        "query": "let vm_p_off =\nVMwareESXi\n| where TimeGenerated > ago(14d)\n| where SyslogMessage has ('VmPoweredOffEvent')\n| extend DstHostname = extract(@'\\[\\d+\\]\\s+\\[(.*?)\\s+on', 1, SyslogMessage)\n| summarize LastPowerOffTime=max(TimeGenerated) by DstHostname\n| where datetime_diff('day',datetime(now),LastPowerOffTime) >= 20; \nlet vm_p_on =\nVMwareESXi\n| where TimeGenerated > ago(14d)\n| where SyslogMessage has ('VmPoweredOnEvent')\n| extend DstHostname = extract(@'\\[\\d+\\]\\s+\\[(.*?)\\s+on', 1, SyslogMessage)\n| summarize LastPowerOnTime=max(TimeGenerated) by DstHostname\n| where datetime_diff('day',datetime(now),LastPowerOnTime) >= 20;\nlet off_vms =\nvm_p_on\n| join (vm_p_off) on DstHostname\n| where LastPowerOffTime > LastPowerOnTime\n| summarize p_off_vm = makeset(DstHostname)\n| extend k=1;\nlet p_on_vms =\nVMwareESXi\n| where TimeGenerated between (ago(24h) .. datetime(now))\n| where SyslogMessage has ('VmPoweredOnEvent')\n| extend DstHostname = extract(@'\\[\\d+\\]\\s+\\[(.*?)\\s+on', 1, SyslogMessage)\n| extend k=1\n| join (off_vms) on k\n| where p_off_vm !has DstHostname\n| summarize rec_p_on = makeset(DstHostname)\n| extend HostCustomEntity = rec_p_on\n",
        "queryFrequency": "PT1H",
        "queryPeriod": "P14D",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "InitialAccess"
        ],
        "entityMappings": [
          {
            "entityType": "Host",
            "fieldMappings": [
              {
                "identifier": "FullName",
                "columnName": "HostCustomEntity"
              }
            ]
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic2-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "This rule is triggered when low patch disk store space is detected.",
        "displayName": "VMware ESXi - Low patch disk space",
        "enabled": false,
        "query": "let threshold = 100;\nVMwareESXi\n| where SyslogMessage has ('Patch store disk')\n| extend sp = toreal(extract(@'free space is:\\s(\\d+)', 1, SyslogMessage)) / 1000000000\n| where sp < threshold\n| extend h = 'Hypervisor'\n| extend HostCustomEntity = h\n",
        "queryFrequency": "PT1H",
        "queryPeriod": "PT1H",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "Impact"
        ],
        "entityMappings": [
          {
            "entityType": "Host",
            "fieldMappings": [
              {
                "identifier": "FullName",
                "columnName": "HostCustomEntity"
              }
            ]
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic3-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "This rule is triggered when temp directory space is detected.",
        "displayName": "VMware ESXi - Low temp directory space",
        "enabled": false,
        "query": "let threshold = 10;\nVMwareESXi\n| where SyslogMessage has_all ('Temp directory', 'free space')\n| extend sp = toreal(extract(@'free space is:\\s(\\d+)', 1, SyslogMessage)) / 1000000000\n| where sp < threshold\n| extend h = 'Hypervisor'\n| extend HostCustomEntity = h\n",
        "queryFrequency": "PT1H",
        "queryPeriod": "PT1H",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "Impact"
        ],
        "entityMappings": [
          {
            "entityType": "Host",
            "fieldMappings": [
              {
                "identifier": "FullName",
                "columnName": "HostCustomEntity"
              }
            ]
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic4-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Detects when multiple new VMs were started.",
        "displayName": "VMware ESXi - Multiple new VMs started",
        "enabled": false,
        "query": "let threshold = 5;\nlet a_vm = \nVMwareESXi\n| where SyslogMessage has ('VmPoweredOnEvent')\n| extend DstHostname = extract(@'\\[\\d+\\]\\s+\\[(.*?)\\s+on', 1, SyslogMessage)\n| summarize vm_l = makeset(DstHostname)\n| extend k=1;\nVMwareESXi\n| where SyslogMessage has ('VmPoweredOnEvent')\n| extend DstHostname = extract(@'\\[\\d+\\]\\s+\\[(.*?)\\s+on', 1, SyslogMessage)\n| extend SrcUsername = extract(@'\\[info\\]\\s+\\[(.*?)\\]', 1, SyslogMessage)\n| extend k = 1\n| join (a_vm) on k\n| where vm_l !has DstHostname\n| summarize n_vm = makeset(DstHostname) by SrcUsername, bin(TimeGenerated, 10m)\n| where array_length(n_vm) >= threshold\n| extend HostCustomEntity = n_vm\n",
        "queryFrequency": "PT1H",
        "queryPeriod": "PT1H",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "InitialAccess"
        ],
        "entityMappings": [
          {
            "entityType": "Host",
            "fieldMappings": [
              {
                "identifier": "FullName",
                "columnName": "HostCustomEntity"
              }
            ]
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic5-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Detects when multiple VMs ware stopped by user.",
        "displayName": "VMware ESXi - Multiple VMs stopped",
        "enabled": false,
        "query": "let threshold = 5;\nVMwareESXi\n| where SyslogMessage has ('VmPoweredOffEvent')\n| extend SrcUsername = extract(@'\\[info\\]\\s+\\[(.*?)\\]', 1, SyslogMessage)\n| extend DstHostname = extract(@'\\[\\d+\\]\\s+\\[(.*?)\\s+on', 1, SyslogMessage)\n| summarize st_vm = makeset(DstHostname) by SrcUsername, bin(TimeGenerated, 5m)\n| where array_length(st_vm) > threshold\n| extend HostCustomEntity = st_vm, AccountCustomEntity = SrcUsername\n",
        "queryFrequency": "PT1H",
        "queryPeriod": "PT1H",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "Impact"
        ],
        "entityMappings": [
          {
            "entityType": "Host",
            "fieldMappings": [
              {
                "identifier": "FullName",
                "columnName": "HostCustomEntity"
              }
            ]
          },
          {
            "entityType": "Account",
            "fieldMappings": [
              {
                "identifier": "Name",
                "columnName": "AccountCustomEntity"
              }
            ]
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic6-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Detects when new VM was started.",
        "displayName": "VMware ESXi - New VM started",
        "enabled": false,
        "query": "let a_vm = \nVMwareESXi\n| where SyslogMessage has ('VmPoweredOnEvent')\n| extend DstHostname = extract(@'\\[\\d+\\]\\s+\\[(.*?)\\s+on', 1, SyslogMessage)\n| summarize vm_l = makeset(DstHostname)\n| extend k=1;\nVMwareESXi\n| where SyslogMessage has ('VmPoweredOnEvent')\n| extend DstHostname = extract(@'\\[\\d+\\]\\s+\\[(.*?)\\s+on', 1, SyslogMessage)\n| extend k = 1\n| join (a_vm) on k\n| where vm_l !has DstHostname\n| extend HostCustomEntity = DstHostname\n",
        "queryFrequency": "PT1H",
        "queryPeriod": "PT1H",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "InitialAccess"
        ],
        "entityMappings": [
          {
            "entityType": "Host",
            "fieldMappings": [
              {
                "identifier": "FullName",
                "columnName": "HostCustomEntity"
              }
            ]
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic7-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Detects when root impersonation occurs.",
        "displayName": "VMware ESXi - Root impersonation",
        "enabled": false,
        "query": "VMwareESXi\n| where SyslogMessage has_all ('ImpersonateUser', 'VcIntegrity', 'root')\n| extend user = 'root'\n| extend AccountCustomEntity = user\n",
        "queryFrequency": "PT1H",
        "queryPeriod": "PT1H",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "PrivilegeEscalation"
        ],
        "entityMappings": [
          {
            "entityType": "Account",
            "fieldMappings": [
              {
                "identifier": "Name",
                "columnName": "AccountCustomEntity"
              }
            ]
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic8-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Detects when root user login.",
        "displayName": "VMware ESXi - Root login",
        "enabled": false,
        "query": "VMwareESXi\n| where SyslogMessage has_all ('UserLoginSessionEvent', 'root', 'logged in')\n| extend SrcIpAddr = extract(@'root@(\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})', 1, SyslogMessage)\n| extend IPCustomEntity = SrcIpAddr\n",
        "queryFrequency": "PT1H",
        "queryPeriod": "PT1H",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "InitialAccess",
          "PrivilegeEscalation"
        ],
        "entityMappings": [
          {
            "entityType": "IP",
            "fieldMappings": [
              {
                "identifier": "Address",
                "columnName": "IPCustomEntity"
              }
            ]
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic9-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Detects when shared or stolen root account.",
        "displayName": "VMware ESXi - Shared or stolen root account",
        "enabled": false,
        "query": "VMwareESXi\n| where SyslogMessage has_all ('UserLoginSessionEvent', 'root', 'logged in')\n| extend SrcIpAddr = extract(@'root@(\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})', 1, SyslogMessage)\n| summarize count() by SrcIpAddr, bin(TimeGenerated, 15m)\n| extend IPCustomEntity = SrcIpAddr\n",
        "queryFrequency": "PT1H",
        "queryPeriod": "PT1H",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 1,
        "tactics": [
          "InitialAccess",
          "PrivilegeEscalation"
        ],
        "entityMappings": [
          {
            "entityType": "IP",
            "fieldMappings": [
              {
                "identifier": "Address",
                "columnName": "IPCustomEntity"
              }
            ]
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic10-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Detects unexpected disk image for VM.",
        "displayName": "VMware ESXi - Unexpected disk image",
        "enabled": false,
        "query": "let img_ =\nVMwareESXi\n| where SyslogMessage has ('Matched discovered VM')\n| extend DstHostname = extract(@'vim.VirtualMachine\\S+,(.*?)\\]', 1, SyslogMessage)\n| extend kImageName = extract(@'ds:///vmfs/volumes/(.*)/(.*?),', 2, SyslogMessage)\n| summarize img_lst = makeset(kImageName) by DstHostname;\nVMwareESXi\n| where SyslogMessage has ('Matched discovered VM')\n| extend DstHostname = extract(@'vim.VirtualMachine\\S+,(.*?)\\]', 1, SyslogMessage)\n| extend ImageName = extract(@'ds:///vmfs/volumes/(.*)/(.*?),', 2, SyslogMessage)\n| join (img_) on DstHostname\n| where img_lst !has ImageName\n| extend HostCustomEntity = DstHostname\n",
        "queryFrequency": "PT1H",
        "queryPeriod": "P14D",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "Impact"
        ],
        "entityMappings": [
          {
            "entityType": "Host",
            "fieldMappings": [
              {
                "identifier": "FullName",
                "columnName": "HostCustomEntity"
              }
            ]
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic11-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Detects when VM was stopped.",
        "displayName": "VMware ESXi - VM stopped",
        "enabled": false,
        "query": "VMwareESXi\n| where SyslogMessage has ('VmPoweredOffEvent')\n| extend SrcUsername = extract(@'\\[info\\]\\s+\\[(.*?)\\]', 1, SyslogMessage)\n| extend DstHostname = extract(@'\\[\\d+\\]\\s+\\[(.*?)\\s+on', 1, SyslogMessage)\n| extend HostCustomEntity = DstHostname, AccountCustomEntity = SrcUsername\n",
        "queryFrequency": "PT1H",
        "queryPeriod": "PT1H",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "Impact"
        ],
        "entityMappings": [
          {
            "entityType": "Host",
            "fieldMappings": [
              {
                "identifier": "FullName",
                "columnName": "HostCustomEntity"
              }
            ]
          },
          {
            "entityType": "Account",
            "fieldMappings": [
              {
                "identifier": "Name",
                "columnName": "AccountCustomEntity"
              }
            ]
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2021-03-01-preview",
      "properties": {
        "version": "1.0.4",
        "kind": "Solution",
        "contentId": "[variables('_sourceId')]",
        "parentId": "[variables('_sourceId')]",
        "source": {
          "kind": "Solution",
          "name": "VMware ESXi",
          "sourceId": "[variables('_sourceId')]"
        },
        "author": {
          "name": "Manoj Arimanda",
          "email": "v-marimanda@microsoft.com"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        },
        "dependencies": {
          "operator": "AND",
          "criteria": [
            {
              "kind": "Workbook",
              "contentId": "[variables('_VMwareESXi_workbook')]",
              "version": "1.0.4"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('_VMwareESXi_Parser')]",
              "version": "1.0.4"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_ESXiDormantUsers_HuntingQueries')]",
              "version": "1.0.4"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_ESXiDownloadErrors_HuntingQueries')]",
              "version": "1.0.4"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_ESXiNFCDownloadActivities_HuntingQueries')]",
              "version": "1.0.4"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_ESXiRootLoginFailure_HuntingQueries')]",
              "version": "1.0.4"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_ESXiRootLogins_HuntingQueries')]",
              "version": "1.0.4"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_ESXiUnusedVMs_HuntingQueries')]",
              "version": "1.0.4"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_ESXiVMHighLoad_HuntingQueries')]",
              "version": "1.0.4"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_ESXiVMPoweredOff_HuntingQueries')]",
              "version": "1.0.4"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_ESXiVMPoweredOn_HuntingQueries')]",
              "version": "1.0.4"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_ESXiVirtualImagesList_HuntingQueries')]",
              "version": "1.0.4"
            },
            {
              "kind": "DataConnector",
              "contentId": "[variables('_VMwareESXiConnector')]",
              "version": "1.0.4"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_ESXiDormantVMStarted_AnalyticalRules')]",
              "version": "1.0.4"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_ESXiLowPatchDiskSpace_AnalyticalRules')]",
              "version": "1.0.4"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_ESXiLowTempDirSpace_AnalyticalRules')]",
              "version": "1.0.4"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_ESXiMultipleNewVM_AnalyticalRules')]",
              "version": "1.0.4"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_ESXiMultipleVMStopped_AnalyticalRules')]",
              "version": "1.0.4"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_ESXiNewVM_AnalyticalRules')]",
              "version": "1.0.4"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_ESXiRootImpersonation_AnalyticalRules')]",
              "version": "1.0.4"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_ESXiRootLogin_AnalyticalRules')]",
              "version": "1.0.4"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_ESXiSharedOrStolenRootAccount_AnalyticalRules')]",
              "version": "1.0.4"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_ESXiUnexpectedDiskImage_AnalyticalRules')]",
              "version": "1.0.4"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_ESXiVMStopped_AnalyticalRules')]",
              "version": "1.0.4"
            }
          ]
        },
        "firstPublishDate": "2022-01-12",
        "providers": [
          "Microsoft"
        ],
        "categories": {
          "domains": [
            "IT operations"
          ]
        }
      },
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_sourceId'))]"
    }
  ],
  "outputs": {}
}
