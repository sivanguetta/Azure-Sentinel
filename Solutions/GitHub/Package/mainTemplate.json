{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "author": "Nikhil Tripathi - v-ntripathi@microsoft.com",
    "comments": "Solution template for GitHub"
  },
  "parameters": {
    "location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
      }
    },
    "workspace-location": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "[concat('Region to deploy solution resources -- separate from location selection',parameters('location'))]"
      }
    },
    "workspace": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Workspace name for Log Analytics where Sentinel is setup"
      }
    },
    "formattedTimeNow": {
      "type": "string",
      "defaultValue": "[utcNow('g')]",
      "metadata": {
        "description": "Appended to workbook displayNames to make them unique"
      }
    },
    "workbook1-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the workbook"
      }
    },
    "workbook1-name": {
      "type": "string",
      "defaultValue": "GitHub",
      "minLength": 1,
      "metadata": {
        "description": "Name for the workbook"
      }
    },
    "analytic1-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic2-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic3-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic4-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic5-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic6-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic7-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic8-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic9-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic10-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic11-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic12-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "connector1-name": {
      "type": "string",
      "defaultValue": "3c4aacd5-4257-44f4-8a8f-e576e0278e10"
    }
  },
  "variables": {
    "GithubWorkbook_workbook": "GithubWorkbook_workbook",
    "_GithubWorkbook_workbook": "[variables('GithubWorkbook_workbook')]",
    "workbook-source": "[concat(resourceGroup().id, '/providers/Microsoft.OperationalInsights/workspaces/',parameters('workspace'))]",
    "_workbook-source": "[variables('workbook-source')]",
    "Preview GitHub - A payment method was removed_AnalyticalRules": "Preview GitHub - A payment method was removed_AnalyticalRules",
    "_Preview GitHub - A payment method was removed_AnalyticalRules": "[variables('Preview GitHub - A payment method was removed_AnalyticalRules')]",
    "Preview GitHub - Activities from Infrequent Country_AnalyticalRules": "Preview GitHub - Activities from Infrequent Country_AnalyticalRules",
    "_Preview GitHub - Activities from Infrequent Country_AnalyticalRules": "[variables('Preview GitHub - Activities from Infrequent Country_AnalyticalRules')]",
    "Preview GitHub - Oauth application - a client secret was removed_AnalyticalRules": "Preview GitHub - Oauth application - a client secret was removed_AnalyticalRules",
    "_Preview GitHub - Oauth application - a client secret was removed_AnalyticalRules": "[variables('Preview GitHub - Oauth application - a client secret was removed_AnalyticalRules')]",
    "Preview GitHub - Repository was created_AnalyticalRules": "Preview GitHub - Repository was created_AnalyticalRules",
    "_Preview GitHub - Repository was created_AnalyticalRules": "[variables('Preview GitHub - Repository was created_AnalyticalRules')]",
    "Preview GitHub - Repository was destroyed_AnalyticalRules": "Preview GitHub - Repository was destroyed_AnalyticalRules",
    "_Preview GitHub - Repository was destroyed_AnalyticalRules": "[variables('Preview GitHub - Repository was destroyed_AnalyticalRules')]",
    "Preview GitHub - Two Factor Authentication Disabled in GitHub_AnalyticalRules": "Preview GitHub - Two Factor Authentication Disabled in GitHub_AnalyticalRules",
    "_Preview GitHub - Two Factor Authentication Disabled in GitHub_AnalyticalRules": "[variables('Preview GitHub - Two Factor Authentication Disabled in GitHub_AnalyticalRules')]",
    "Preview GitHub - User visibility Was changed_AnalyticalRules": "Preview GitHub - User visibility Was changed_AnalyticalRules",
    "_Preview GitHub - User visibility Was changed_AnalyticalRules": "[variables('Preview GitHub - User visibility Was changed_AnalyticalRules')]",
    "Preview GitHub - User was added to the organization_AnalyticalRules": "Preview GitHub - User was added to the organization_AnalyticalRules",
    "_Preview GitHub - User was added to the organization_AnalyticalRules": "[variables('Preview GitHub - User was added to the organization_AnalyticalRules')]",
    "Preview GitHub - User was blocked_AnalyticalRules": "Preview GitHub - User was blocked_AnalyticalRules",
    "_Preview GitHub - User was blocked_AnalyticalRules": "[variables('Preview GitHub - User was blocked_AnalyticalRules')]",
    "Preview GitHub - User was invited to the repository _AnalyticalRules": "Preview GitHub - User was invited to the repository _AnalyticalRules",
    "_Preview GitHub - User was invited to the repository _AnalyticalRules": "[variables('Preview GitHub - User was invited to the repository _AnalyticalRules')]",
    "Preview GitHub - pull request was created_AnalyticalRules": "Preview GitHub - pull request was created_AnalyticalRules",
    "_Preview GitHub - pull request was created_AnalyticalRules": "[variables('Preview GitHub - pull request was created_AnalyticalRules')]",
    "Preview GitHub - pull request was merged_AnalyticalRules": "Preview GitHub - pull request was merged_AnalyticalRules",
    "_Preview GitHub - pull request was merged_AnalyticalRules": "[variables('Preview GitHub - pull request was merged_AnalyticalRules')]",
    "First Time User Invite and Add Member to Org_HuntingQueries": "First Time User Invite and Add Member to Org_HuntingQueries",
    "_First Time User Invite and Add Member to Org_HuntingQueries": "[variables('First Time User Invite and Add Member to Org_HuntingQueries')]",
    "workspace-dependency": "[concat('Microsoft.OperationalInsights/workspaces/', parameters('workspace'))]",
    "Inactive or New Account Usage_HuntingQueries": "Inactive or New Account Usage_HuntingQueries",
    "_Inactive or New Account Usage_HuntingQueries": "[variables('Inactive or New Account Usage_HuntingQueries')]",
    "Mass Deletion of Repositories _HuntingQueries": "Mass Deletion of Repositories _HuntingQueries",
    "_Mass Deletion of Repositories _HuntingQueries": "[variables('Mass Deletion of Repositories _HuntingQueries')]",
    "Oauth App Restrictions Disabled_HuntingQueries": "Oauth App Restrictions Disabled_HuntingQueries",
    "_Oauth App Restrictions Disabled_HuntingQueries": "[variables('Oauth App Restrictions Disabled_HuntingQueries')]",
    "Org Repositories Default Permissions Change_HuntingQueries": "Org Repositories Default Permissions Change_HuntingQueries",
    "_Org Repositories Default Permissions Change_HuntingQueries": "[variables('Org Repositories Default Permissions Change_HuntingQueries')]",
    "Repository Permission Switched to Public_HuntingQueries": "Repository Permission Switched to Public_HuntingQueries",
    "_Repository Permission Switched to Public_HuntingQueries": "[variables('Repository Permission Switched to Public_HuntingQueries')]",
    "User First Time Repository Delete Activity_HuntingQueries": "User First Time Repository Delete Activity_HuntingQueries",
    "_User First Time Repository Delete Activity_HuntingQueries": "[variables('User First Time Repository Delete Activity_HuntingQueries')]",
    "User Grant Access and Grants Other Access_HuntingQueries": "User Grant Access and Grants Other Access_HuntingQueries",
    "_User Grant Access and Grants Other Access_HuntingQueries": "[variables('User Grant Access and Grants Other Access_HuntingQueries')]",
    "GitHubAuditData_Parser": "GitHubAuditData_Parser",
    "_GitHubAuditData_Parser": "[variables('GitHubAuditData_Parser')]",
    "connector1-source": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.OperationalInsights/workspaces/',parameters('workspace'),'/providers/Microsoft.SecurityInsights/dataConnectors/',parameters('connector1-name'))]",
    "_connector1-source": "[variables('connector1-source')]",
    "Connector": "Connector",
    "_Connector": "[variables('Connector')]",
    "sourceId": "microsoftcorporation1622712991604.sentinel4github",
    "_sourceId": "[variables('sourceId')]"
  },
  "resources": [
    {
      "type": "Microsoft.Insights/workbooks",
      "name": "[parameters('workbook1-id')]",
      "location": "[parameters('workspace-location')]",
      "kind": "shared",
      "apiVersion": "2021-08-01",
      "properties": {
        "displayName": "[concat(parameters('workbook1-name'), ' - ', parameters('formattedTimeNow'))]",
        "serializedData": "{\"version\":\"Notebook/1.0\",\"items\":[{\"type\":1,\"content\":{\"json\":\"## GitHub - Security\\n\"},\"name\":\"text - 2\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"a9923eb9-9a02-4a48-bb72-e9be338eeb3b\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"TimeRange\",\"type\":4,\"value\":{\"durationMs\":1209600000},\"typeSettings\":{\"selectableValues\":[{\"durationMs\":300000},{\"durationMs\":900000},{\"durationMs\":1800000},{\"durationMs\":3600000},{\"durationMs\":14400000},{\"durationMs\":43200000},{\"durationMs\":86400000},{\"durationMs\":172800000},{\"durationMs\":259200000},{\"durationMs\":604800000},{\"durationMs\":1209600000},{\"durationMs\":2419200000},{\"durationMs\":2592000000},{\"durationMs\":5184000000},{\"durationMs\":7776000000}]}}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"parameters - 2\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"GitHubAuditData \\n| where Action == \\\"org.add_member\\\" or Action == \\\"org.remove_member\\\"\\n| extend Action = iif(Action==\\\"org.add_member\\\", \\\"Added\\\", \\\"Removed\\\")\\n| sort by TimeGenerated desc\\n| project MemberName=Actor, Action, Organization\\n\",\"size\":1,\"title\":\"Members Added or Removed\",\"timeContext\":{\"durationMs\":11318400000,\"endTime\":\"2021-08-10T16:00:00Z\"},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"50\",\"name\":\"membersaddedorremoved\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"GitHubAuditData \\r\\n| where Action == \\\"repo.create\\\"\\r\\n| sort by TimeGenerated desc\\r\\n| project Repository, Actor, Visibility\\r\\n\\r\\n\\r\\n\\r\\n\",\"size\":0,\"title\":\"Repositories Created\",\"timeContext\":{\"durationMs\":15116400000,\"endTime\":\"2021-08-10T16:04:00Z\"},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"50\",\"name\":\"repositoriescreated\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"GitHubAuditData \\r\\n| where Action == \\\"team.add_repository\\\" or Action == \\\"team.remove_repository\\\"\\r\\n| extend Action = iif(Action==\\\"team.add_repository\\\", \\\"Added\\\", \\\"Removed\\\")\\r\\n| sort by TimeGenerated desc\\r\\n| project Organization, Repository, Action\",\"size\":0,\"title\":\"Teams Added/Removed Repository\",\"timeContext\":{\"durationMs\":37411200000,\"endTime\":\"2021-08-10T16:06:00Z\"},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"50\",\"name\":\"teamsaddedremovedtorepository\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"GitHubAuditData \\r\\n| where Action == \\\"repo.access\\\"  and Visibility == \\\"PUBLIC\\\"\\r\\n| sort by TimeGenerated desc\\r\\n| project Organization, Repository, Actor\\r\\n\",\"size\":0,\"title\":\"Private Repos made Public\",\"timeContext\":{\"durationMs\":19263600000,\"endTime\":\"2021-08-10T16:08:00Z\"},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"50\",\"name\":\"privatereposmadepublic\"}],\"fromTemplateId\":\"sentinel-GitHubSecurity\",\"$schema\":\"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\"}\r\n",
        "version": "1.0",
        "sourceId": "[variables('_workbook-source')]",
        "category": "sentinel"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic1-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Detect activities when a payment method was removed. This query runs every day and its severity is Medium.",
        "displayName": "Preview GitHub - A payment method was removed",
        "enabled": false,
        "query": "GitHubAuditData\n| where Action == \"payment_method.remove\"\n| extend AccountCustomEntity = Actor\n",
        "queryFrequency": "P1D",
        "queryPeriod": "P7D",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "InitialAccess"
        ],
        "entityMappings": [
          {
            "fieldMappings": [
              {
                "columnName": "AccountCustomEntity",
                "identifier": "FullName"
              }
            ],
            "entityType": "Account"
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic2-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Detect activities from a location that was not recently or was never visited by the user or by any user in your organization.",
        "displayName": "GitHub Activites from a New Country",
        "enabled": false,
        "query": "let LearningPeriod = 7d;\nlet RunTime = 1h;\nlet StartTime = 1h;\nlet EndRunTime = StartTime - RunTime;\nlet EndLearningTime = StartTime + LearningPeriod;\nlet GitHubCountryCodeLogs = (GitHubAuditData\n| where Country != \"\");\n  GitHubCountryCodeLogs\n| where TimeGenerated between (ago(EndLearningTime) .. ago(StartTime))\n| summarize makeset(Country) by Actor\n| join kind=innerunique (\n  GitHubCountryCodeLogs\n  | where TimeGenerated between (ago(StartTime) .. ago(EndRunTime))\n  | distinct Country, Actor, TimeGenerated\n) on Actor \n| where set_Country !contains Country\n| extend AccountCustomEntity = Actor , timestamp = TimeGenerated\n",
        "queryFrequency": "P1D",
        "queryPeriod": "P7D",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "InitialAccess"
        ],
        "entityMappings": [
          {
            "fieldMappings": [
              {
                "columnName": "AccountCustomEntity",
                "identifier": "FullName"
              }
            ],
            "entityType": "Account"
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic3-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Detect activities when a client secret was removed. This query runs every day and its severity is Medium.",
        "displayName": "Preview GitHub - Oauth application - a client secret was removed",
        "enabled": false,
        "query": "GitHubAuditData\n| where Action == \"oauth_application.remove_client_secret\"\n| extend AccountCustomEntity = Actor\n",
        "queryFrequency": "P1D",
        "queryPeriod": "P7D",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "InitialAccess"
        ],
        "entityMappings": [
          {
            "fieldMappings": [
              {
                "columnName": "AccountCustomEntity",
                "identifier": "FullName"
              }
            ],
            "entityType": "Account"
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic4-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Detect activities when a repository was created. This query runs every day and its severity is Medium.",
        "displayName": "Preview GitHub - Repository was created",
        "enabled": false,
        "query": "GitHubAuditData\n| where Action == \"repo.create\"\n| extend AccountCustomEntity = Actor\n",
        "queryFrequency": "P1D",
        "queryPeriod": "P7D",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "InitialAccess"
        ],
        "entityMappings": [
          {
            "fieldMappings": [
              {
                "columnName": "AccountCustomEntity",
                "identifier": "FullName"
              }
            ],
            "entityType": "Account"
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic5-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Detect activities when a repository was destroyed. This query runs every day and its severity is Medium.",
        "displayName": "Preview GitHub - Repository was destroyed",
        "enabled": false,
        "query": "GitHubAuditData\n| where Action == \"repo.destroy\"\n| extend AccountCustomEntity = Actor\n",
        "queryFrequency": "P1D",
        "queryPeriod": "P7D",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "InitialAccess"
        ],
        "entityMappings": [
          {
            "fieldMappings": [
              {
                "columnName": "AccountCustomEntity",
                "identifier": "FullName"
              }
            ],
            "entityType": "Account"
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic6-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Two-factor authentication is a process where a user is prompted during the sign-in process for an additional form of identification, such as to enter a code on their cellphone or to provide a fingerprint scan. Two factor authentication reduces the risk of account takeover. Attacker will want to disable such security tools in order to go undetected. ",
        "displayName": "GitHub Two Factor Auth Disable",
        "enabled": false,
        "query": "\nGitHubAuditData\n| where Action == \"org.disable_two_factor_requirement\"\n| project TimeGenerated, Action, Actor, Country, Repository\n| extend AccountCustomEntity = Actor\n",
        "queryFrequency": "P1D",
        "queryPeriod": "P1D",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "DefenseEvasion"
        ],
        "entityMappings": [
          {
            "fieldMappings": [
              {
                "columnName": "AccountCustomEntity",
                "identifier": "FullName"
              }
            ],
            "entityType": "Account"
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic7-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Detect activities when a user visibility Was changed. This query runs every day and its severity is Medium.",
        "displayName": "Preview GitHub - User visibility Was changed",
        "enabled": false,
        "query": "GitHubAuditData\n| where Visibility != PreviousVisibility\n| project Actor, PreviousVisibility, Visibility\n| extend AccountCustomEntity = Actor\n",
        "queryFrequency": "P1D",
        "queryPeriod": "P7D",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "InitialAccess"
        ],
        "entityMappings": [
          {
            "fieldMappings": [
              {
                "columnName": "AccountCustomEntity",
                "identifier": "FullName"
              }
            ],
            "entityType": "Account"
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic8-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Detect activities when a user was added to the organization. This query runs every day and its severity is Medium.",
        "displayName": "Preview GitHub - User was added to the organization",
        "enabled": false,
        "query": "GitHubAuditData\n| where Action == \"org.add_member\"\n| project Actor, Action\n| extend AccountCustomEntity = Actor\n",
        "queryFrequency": "P1D",
        "queryPeriod": "P7D",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "InitialAccess"
        ],
        "entityMappings": [
          {
            "fieldMappings": [
              {
                "columnName": "AccountCustomEntity",
                "identifier": "FullName"
              }
            ],
            "entityType": "Account"
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic9-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Detect activities when a user was blocked on the repository. This query runs every day and its severity is Medium.",
        "displayName": "Preview GitHub - User was blocked",
        "enabled": false,
        "query": "GitHubAuditData\n| where Action == \"org.block_user\"\n| project Actor, Action \n| extend AccountCustomEntity = Actor\n",
        "queryFrequency": "P1D",
        "queryPeriod": "P7D",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "InitialAccess"
        ],
        "entityMappings": [
          {
            "fieldMappings": [
              {
                "columnName": "AccountCustomEntity",
                "identifier": "FullName"
              }
            ],
            "entityType": "Account"
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic10-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Detect activities when a user was invited to the repository. This query runs every day and its severity is Medium.",
        "displayName": "Preview GitHub - User was invited to the repository",
        "enabled": false,
        "query": "GitHubAuditData \n| where Action == \"org.invite_member\"\n| project Actor, Action\n| extend AccountCustomEntity = Actor\n",
        "queryFrequency": "P1D",
        "queryPeriod": "P7D",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "InitialAccess"
        ],
        "entityMappings": [
          {
            "fieldMappings": [
              {
                "columnName": "AccountCustomEntity",
                "identifier": "FullName"
              }
            ],
            "entityType": "Account"
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic11-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Detect activities when a pull request was created. This query runs every day and its severity is Medium.",
        "displayName": "Preview GitHub - pull request was created",
        "enabled": false,
        "query": "GitHubAuditData \n| where Action == \"pull_request.create\"\n| project Actor, Action\n| extend AccountCustomEntity = Actor\n",
        "queryFrequency": "P1D",
        "queryPeriod": "P7D",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "InitialAccess"
        ],
        "entityMappings": [
          {
            "fieldMappings": [
              {
                "columnName": "AccountCustomEntity",
                "identifier": "FullName"
              }
            ],
            "entityType": "Account"
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic12-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Detect activities when a pull request was merged. This query runs every day and its severity is Medium.",
        "displayName": "Preview GitHub - pull request was merged",
        "enabled": false,
        "query": "GitHubAuditData\n| where Action == \"pull_request.merge\"\n| project Actor, Action\n| extend AccountCustomEntity = Actor\n",
        "queryFrequency": "P1D",
        "queryPeriod": "P7D",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "InitialAccess"
        ],
        "entityMappings": [
          {
            "fieldMappings": [
              {
                "columnName": "AccountCustomEntity",
                "identifier": "FullName"
              }
            ],
            "entityType": "Account"
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2020-08-01",
      "name": "[parameters('workspace')]",
      "location": "[parameters('workspace-location')]",
      "resources": [
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "GitHub Hunting Query 1",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "GitHub First Time Invite Member and Add Member to Repo",
            "category": "Hunting Queries",
            "query": "\nlet starttime = todatetime('{{StartTimeISO}}');\nlet endtime = todatetime('{{EndTimeISO}}');\nlet LearningPeriod = 7d;\nlet EndLearningTime = starttime - LearningPeriod;\nlet GitHubOrgMemberLogs = (GitHubAuditData\n| where Action == \"org.invite_member\" or Action == \"org.update_member\" or Action == \"org.add_member\" or Action == \"repo.add_member\" or Action == \"team.add_member\");\nGitHubOrgMemberLogs\n| where TimeGenerated between (EndLearningTime..starttime)\n| distinct Actor\n| join kind=rightanti (\n  GitHubOrgMemberLogs\n  | where TimeGenerated between (starttime..endtime)\n  | distinct Actor\n) on Actor\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "This hunting query identifies a user that add/invite a member to the organization for the first time. This technique can be leveraged by attackers to add stealth account access to the organization."
              },
              {
                "name": "tactics",
                "value": "Persistence"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "GitHub Hunting Query 2",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "GitHub Inactive or New Account Access or Usage",
            "category": "Hunting Queries",
            "query": "\nlet starttime = todatetime('{{StartTimeISO}}');\nlet endtime = todatetime('{{EndTimeISO}}');\nlet LearningPeriod = 7d;\nlet EndLearningTime = starttime - LearningPeriod;\nlet GitHubActorLogin = (GitHubAuditData\n| where Actor != \"\");\nlet GitHubUser = (GitHubAuditData\n| where ImpactedUser != \"\");\nlet GitHubNewActorLogin = (GitHubActorLogin\n| where TimeGenerated between (EndLearningTime .. starttime)\n| summarize makeset(Actor)\n| extend Dummy = 1\n| join kind=innerunique (\n  GitHubActorLogin\n  | where TimeGenerated between (starttime .. endtime)\n  | distinct Actor\n  | extend Dummy = 1\n) on Dummy\n| project-away Dummy\n| where set_Actor  !contains Actor);\nlet GitHubNewUser = ( GitHubUser\n| where TimeGenerated between (EndLearningTime .. starttime)\n| summarize makeset(ImpactedUser)\n| extend Dummy = 1\n| join kind=innerunique (\n  GitHubUser\n  | where TimeGenerated between (starttime .. endtime)\n  | distinct ImpactedUser\n  | extend Dummy = 1\n) on Dummy\n| project-away Dummy\n| where set_ImpactedUser !contains ImpactedUser);\nunion GitHubNewActorLogin, GitHubNewUser\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "This hunting query identifies Accounts that are new or inactive and have accessed or used GitHub that may be a sign of compromise."
              },
              {
                "name": "tactics",
                "value": "Persistence"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "GitHub Hunting Query 3",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "GitHub Mass Deletion of repos or projects",
            "category": "Hunting Queries",
            "query": "\nlet starttime = todatetime('{{StartTimeISO}}');\nlet endtime = todatetime('{{EndTimeISO}}');\nlet LearningPeriod = 7d;\nlet BinTime = 1h;\nlet EndLearningTime = starttime - LearningPeriod;\nlet NumberOfStds = 3;\nlet MinThreshold = 10.0;\nlet GitHubRepositoryDestroyEvents = (GitHubAuditData\n| where Action == \"repo.destroy\");\nGitHubRepositoryDestroyEvents\n| where TimeGenerated between (EndLearningTime .. starttime)\n| summarize count() by bin(TimeGenerated, BinTime)\n| summarize AvgInLearning = avg(count_), StdInLearning = stdev(count_)\n| extend LearningThreshold = max_of(AvgInLearning + StdInLearning * NumberOfStds, MinThreshold)\n| extend Dummy = 1\n| join kind=innerunique (\n  GitHubRepositoryDestroyEvents\n  | where TimeGenerated between (starttime..endtime)\n  | summarize CountInRunTime = count() by bin(TimeGenerated, BinTime)\n  | extend Dummy = 1\n) on Dummy\n| project-away Dummy\n| where CountInRunTime > LearningThreshold\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "This hunting query identifies GitHub activites where there are a large number of deletions that may be a sign of compromise."
              },
              {
                "name": "tactics",
                "value": "Impact"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "GitHub Hunting Query 4",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "GitHub OAuth App Restrictions Disabled",
            "category": "Hunting Queries",
            "query": "\nGitHubAuditData\n| where Action == \"org.disable_oauth_app_restrictions\"\n| project TimeGenerated, Action, Actor, Country\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "This hunting query identifies GitHub OAuth Apps that have restrictions disabled that may be a sign of compromise. Attacker will want to disable such security tools in order to go undetected. "
              },
              {
                "name": "tactics",
                "value": "Persistence,DefenseEvasion"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "GitHub Hunting Query 5",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "GitHub Update Permissions",
            "category": "Hunting Queries",
            "query": "\nGitHubAuditData\n| where Action == \"org.update_default_repository_permission\"\n| project TimeGenerated, Action, Actor, Country, Repository, PreviousPermission, CurrentPermission\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "This hunting query identifies GitHub activites where permissions are updated that may be a sign of compromise."
              },
              {
                "name": "tactics",
                "value": "Persistence,DefenseEvasion"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "GitHub Hunting Query 6",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "GitHub Repo switched from private to public",
            "category": "Hunting Queries",
            "query": "\nGitHubAuditData\n| where Action == \"repo.access\"\n| where Visibility == \"public\" and PreviousVisibility in (\"internal\", \"private\")\n| project TimeGenerated, Action, Actor, Country, Repository, Visibility\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "This hunting query identifies GitHub activites where a repo was changed from private to public that may be a sign of compromise."
              },
              {
                "name": "tactics",
                "value": "Collection"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "GitHub Hunting Query 7",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "GitHub First Time Repo Delete",
            "category": "Hunting Queries",
            "query": "\nlet starttime = todatetime('{{StartTimeISO}}');\nlet endtime = todatetime('{{EndTimeISO}}');\nlet LearningPeriod = 7d;\nlet EndLearningTime = starttime - LearningPeriod;\nlet GitHubRepositoryDestroyEvents = (GitHubAuditData\n| where Action == \"repo.destroy\");\nGitHubRepositoryDestroyEvents\n| where TimeGenerated between (EndLearningTime .. starttime)\n| distinct Actor\n| join kind=rightanti (\n  GitHubRepositoryDestroyEvents\n  | where TimeGenerated between (starttime .. endtime)\n  | distinct Actor\n) on Actor\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "This hunting query identifies GitHub activites its the first time a user deleted a repo that may be a sign of compromise."
              },
              {
                "name": "tactics",
                "value": "Impact"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "GitHub Hunting Query 8",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "GitHub User Grants Access and Other User Grants Access",
            "category": "Hunting Queries",
            "query": "\nGitHubAuditData\n| where ImpactedUser != \"\"\n| where Action == \"org.invite_member\" or Action == \"org.add_member\" or Action == \"team.add_member\" or Action == \"repo.add_member\"\n| distinct ImpactedUser, TimeGenerated, Actor\n| project-rename firstUserAdded = ImpactedUser, firstEventTime = TimeGenerated, firstAdderUser = Actor\n| join kind= innerunique (\n  GitHubAuditData\n  | where ImpactedUser != \"\"\n  | where Action == \"org.invite_member\" or Action == \"org.add_member\" or Action == \"team.add_member\" or Action == \"repo.add_member\"\n  | distinct ImpactedUser, TimeGenerated, Actor\n  | project-rename secondUserAdded = ImpactedUser, secondEventTime = TimeGenerated, secondAdderUser = Actor\n) on $right.secondAdderUser == $left.firstUserAdded\n| where secondEventTime between (firstEventTime .. (firstEventTime + 1h))\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "This hunting query identifies Accounts in GitHub that have granted access to another account which then grants access to yet another account that may be a sign of compromise."
              },
              {
                "name": "tactics",
                "value": "Persistence,PrivilegeEscalation"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "GitHub Data Parser",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "GitHub Data Parser",
            "category": "Samples",
            "functionAlias": "GitHubAuditData",
            "query": "\n\r\n\r\nGitHubAuditLogPolling_CL\r\n| project TimeGenerated=unixtime_milliseconds_todatetime(created_at_d),\r\n    Organization=columnifexists('org_s', \"\"),\r\n    Action=action_s,\r\n    Repository=columnifexists('repo_s',\"\"),\r\n    Actor=columnifexists('actor_s', \"\"),\r\n\tCountry=columnifexists('actor_location_country_code_s', \"\"),\r\n    ImpactedUser=columnifexists('user_s', \"\"),\r\n    InvitedUserPermission=columnifexists('permission_s', \"\"),\r\n    Visibility=columnifexists('visibility_s', \"\"),\r\n    PreviousVisibility=columnifexists('previous_visibility_s', \"\"),\r\n    CurrentPermission=columnifexists('permission_s', \"\"),\r\n    PreviousPermission=columnifexists('old_permission_s', \"\"),\r\n    TeamName=columnifexists('team_s', \"\"),\r\n    BlockedUser=columnifexists('blocked_user_s', \"\")\r\n\r\n\r\n\r\n",
            "version": 1
          }
        }
      ]
    },
    {
      "id": "[variables('_connector1-source')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('connector1-name'))]",
      "apiVersion": "2021-03-01-preview",
      "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
      "location": "[parameters('workspace-location')]",
      "kind": "APIPolling",
      "properties": {
        "connectorUiConfig": {
          "title": "GitHub Enterprise Audit Log",
          "publisher": "GitHub",
          "descriptionMarkdown": "The GitHub audit log connector provides the capability to ingest GitHub logs into Azure Sentinel. By connecting GitHub audit logs into Azure Sentinel, you can view this data in workbooks, use it to create custom alerts, and improve your investigation process.",
          "graphQueriesTableName": "GitHubAuditLogPolling_CL",
          "graphQueries": [
            {
              "metricName": "Total events received",
              "legend": "GitHub audit log events",
              "baseQuery": "{{graphQueriesTableName}}"
            }
          ],
          "sampleQueries": [
            {
              "description": "All logs",
              "query": "{{graphQueriesTableName}}\n | take 10"
            }
          ],
          "dataTypes": [
            {
              "name": "GitHubAuditData",
              "lastDataReceivedQuery": "GitHubAuditData\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            }
          ],
          "connectivityCriterias": [
            {
              "type": "SentinelKindsV2",
              "value": []
            }
          ],
          "availability": {
            "status": 1,
            "isPreview": true
          },
          "permissions": {
            "resourceProvider": [
              {
                "provider": "Microsoft.OperationalInsights/workspaces",
                "permissionsDisplayText": "read and write permissions are required.",
                "providerDisplayName": "Workspace",
                "scope": "Workspace",
                "requiredPermissions": {
                  "write": true,
                  "read": true,
                  "delete": true
                }
              }
            ],
            "customs": [
              {
                "name": "GitHub API personal token Key",
                "description": "You need access to GitHub personal token, the key should have 'admin:org' scope"
              }
            ]
          },
          "instructionSteps": [
            {
              "title": "Connect GitHub Enterprise Audit Log to Azure Sentinel",
              "description": "Enable GitHub audit Logs. \n Follow [this](https://docs.github.com/en/github/authenticating-to-github/keeping-your-account-and-data-secure/creating-a-personal-access-token) to create or find your personal key",
              "instructions": [
                {
                  "parameters": {
                    "enable": "true",
                    "userRequestPlaceHoldersInput": [
                      {
                        "displayText": "Organization Name",
                        "requestObjectKey": "apiEndpoint",
                        "placeHolderName": "{{placeHolder1}}"
                      }
                    ]
                  },
                  "type": "APIKey"
                }
              ]
            }
          ]
        },
        "pollingConfig": {
          "owner": "ASI",
          "version": "2.0",
          "source": "PaaS",
          "auth": {
            "authType": "APIKey",
            "APIKeyName": "Authorization",
            "APIKeyIdentifier": "token"
          },
          "request": {
            "apiEndpoint": "https://api.github.com/organizations/{{placeHolder1}}/audit-log",
            "rateLimitQPS": 50,
            "queryWindowInMin": 15,
            "httpMethod": "Get",
            "queryTimeFormat": "yyyy-MM-ddTHH:mm:ssZ",
            "retryCount": 2,
            "timeoutInSeconds": 60,
            "headers": {
              "Accept": "application/json",
              "User-Agent": "Scuba"
            },
            "queryParameters": {
              "phrase": "created:{_QueryWindowStartTime}..{_QueryWindowEndTime}"
            }
          },
          "paging": {
            "pagingType": "LinkHeader",
            "pageSizeParaName": "per_page"
          },
          "response": {
            "eventsJsonPaths": [
              "$"
            ]
          }
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2021-03-01-preview",
      "properties": {
        "version": "1.0.52",
        "kind": "Solution",
        "contentId": "[variables('_sourceId')]",
        "parentId": "[variables('_sourceId')]",
        "source": {
          "kind": "Solution",
          "name": "GitHub",
          "sourceId": "[variables('_sourceId')]"
        },
        "author": {
          "name": "Nikhil Tripathi",
          "email": "v-ntripathi@microsoft.com"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        },
        "dependencies": {
          "operator": "AND",
          "criteria": [
            {
              "kind": "Workbook",
              "contentId": "[variables('_GithubWorkbook_workbook')]",
              "version": "1.0.52"

            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_Preview GitHub - A payment method was removed_AnalyticalRules')]",
              "version": "1.0.52"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_Preview GitHub - Activities from Infrequent Country_AnalyticalRules')]",
              "version": "1.0.52"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_Preview GitHub - Oauth application - a client secret was removed_AnalyticalRules')]",
              "version": "1.0.52"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_Preview GitHub - Repository was created_AnalyticalRules')]",
              "version": "1.0.52"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_Preview GitHub - Repository was destroyed_AnalyticalRules')]",
              "version": "1.0.52"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_Preview GitHub - Two Factor Authentication Disabled in GitHub_AnalyticalRules')]",
              "version": "1.0.52"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_Preview GitHub - User visibility Was changed_AnalyticalRules')]",
              "version": "1.0.52"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_Preview GitHub - User was added to the organization_AnalyticalRules')]",
              "version": "1.0.52"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_Preview GitHub - User was blocked_AnalyticalRules')]",
              "version": "1.0.52"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_Preview GitHub - User was invited to the repository _AnalyticalRules')]",
              "version": "1.0.52"            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_Preview GitHub - pull request was created_AnalyticalRules')]",
              "version": "1.0.52"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_Preview GitHub - pull request was merged_AnalyticalRules')]",
              "version": "1.0.52"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_First Time User Invite and Add Member to Org_HuntingQueries')]",
              "version": "1.0.52"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_Inactive or New Account Usage_HuntingQueries')]",
              "version": "1.0.52"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_Mass Deletion of Repositories _HuntingQueries')]",
              "version": "1.0.52"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_Oauth App Restrictions Disabled_HuntingQueries')]",
              "version": "1.0.52"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_Org Repositories Default Permissions Change_HuntingQueries')]",
              "version": "1.0.52"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_Repository Permission Switched to Public_HuntingQueries')]",
              "version": "1.0.52"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_User First Time Repository Delete Activity_HuntingQueries')]",
              "version": "1.0.52"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_User Grant Access and Grants Other Access_HuntingQueries')]",
              "version": "1.0.52"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('_GitHubAuditData_Parser')]",
              "version": "1.0.52"
            },
            {
              "kind": "DataConnector",
              "contentId": "[variables('_Connector')]",
              "version": "1.0.52"
            }
          ]
        },
        "firstPublishDate": "2021-10-18",
        "providers": [
          "Microsoft"
        ],
        "categories": {
          "domains": [
            "DevOps"
          ]
        }
      },
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_sourceId'))]"
    }
  ],
  "outputs": {}
}
